<type ver="2" base-type-id="ffaf5544-6200-45f4-87ec-9dd24558a9d5" base-type="Form" uuid="3a63182a-45e8-4259-a203-84dcd20232b8" display-name="Form_1" name="FilterRequestForm" access-modifier="private">
	<designed target="X" value="0" ver="2"/>
	<designed target="Y" value="0" ver="2"/>
	<designed target="Rotation" value="0" ver="2"/>
	<designed target="Scale" value="1" ver="2"/>
	<designed target="Visible" value="true" ver="2"/>
	<designed target="Enabled" value="true" ver="2"/>
	<designed target="Tooltip" value="" ver="2"/>
	<designed target="Width" value="420" ver="2"/>
	<designed target="Height" value="225" ver="2"/>
	<designed target="PenColor" value="0xff000000" ver="2"/>
	<designed target="PenStyle" value="0" ver="2"/>
	<designed target="PenWidth" value="1" ver="2"/>
	<designed target="BrushColor" value="4293980400" ver="2"/>
	<designed target="BrushStyle" value="1" ver="2"/>
	<designed target="WindowX" value="0" ver="2"/>
	<designed target="WindowY" value="0" ver="2"/>
	<designed target="WindowWidth" value="420" ver="2"/>
	<designed target="WindowHeight" value="275" ver="2"/>
	<designed target="WindowCaption" value="Фильтр запроса" ver="2"/>
	<designed target="ShowWindowCaption" value="false" ver="2"/>
	<designed target="ShowWindowMinimize" value="false" ver="2"/>
	<designed target="ShowWindowMaximize" value="false" ver="2"/>
	<designed target="ShowWindowClose" value="true" ver="2"/>
	<designed target="AlwaysOnTop" value="false" ver="2"/>
	<designed target="WindowSizeMode" value="1" ver="2"/>
	<designed target="WindowBorderStyle" value="2" ver="2"/>
	<designed target="WindowState" value="0" ver="2"/>
	<designed target="WindowScalingMode" value="0" ver="2"/>
	<designed target="MonitorNumber" value="0" ver="2"/>
	<designed target="WindowPosition" value="2" ver="2"/>
	<designed target="WindowCloseMode" value="0" ver="2"/>
	<object access-modifier="private" name="DebugTool_1" display-name="DebugTool_1" uuid="8f9ecc19-6d9b-4190-866c-5ac473ba4577" base-type="DebugTool" base-type-id="43946044-139a-43f4-a7b8-19a6074ffc56" ver="2"/>
	<object access-modifier="private" name="Main_FilterForm" display-name="Main_FilterForm" uuid="191e0393-3335-4648-8838-9997c38e5445" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="73.0334" ver="2"/>
		<designed target="Y" value="193.9" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="280" ver="2"/>
		<designed target="Height" value="26" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="0" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
		<object access-modifier="private" name="private" display-name="private" uuid="ac18aff4-6296-4b9b-98e2-13bff502f9eb" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
			<designed target="X" value="26" ver="2"/>
			<designed target="Y" value="-93.5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="21" ver="2"/>
			<designed target="Height" value="17.5" ver="2"/>
			<designed target="RoundingRadius" value="0" ver="2"/>
			<designed target="PenColor" value="4278190080" ver="2"/>
			<designed target="PenStyle" value="0" ver="2"/>
			<designed target="PenWidth" value="1" ver="2"/>
			<designed target="BrushColor" value="4278190080" ver="2"/>
			<designed target="BrushStyle" value="0" ver="2"/>
			<object access-modifier="private" name="FilterString" display-name="FilterString" uuid="12629a5c-f868-4cf4-9f8f-ec5b453a1829" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="2"/>
		</object>
		<object access-modifier="private" name="Button_Cancel" display-name="Button_Cancel" uuid="9017d77e-4899-48c7-970d-f4c2efbc328c" base-type="SystemButton" base-type-id="22504b6b-d24c-45e5-a9dd-6fb41e3d49c1" ver="2">
			<designed target="X" value="156" ver="2"/>
			<designed target="Y" value="-1" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="75" ver="2"/>
			<designed target="Height" value="25" ver="2"/>
			<designed target="Text" value="Отмена" ver="2"/>
			<designed target="Font" value="Sans Serif,8,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="ButtonPressed">
				<body kind="om">
					<![CDATA[Close();]]>
				</body>
			</do-on>
			<designed target="Checkable" value="false" ver="2"/>
		</object>
		<object access-modifier="private" name="Button_Apply" display-name="Button_Apply" uuid="5718c2c7-2f6b-47f5-8eb7-3ebb720917f1" base-type="SystemButton" base-type-id="22504b6b-d24c-45e5-a9dd-6fb41e3d49c1" ver="2">
			<designed target="X" value="43" ver="2"/>
			<designed target="Y" value="-1" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="75" ver="2"/>
			<designed target="Height" value="25" ver="2"/>
			<designed target="Checkable" value="false" ver="2"/>
			<designed target="Text" value="Применить" ver="2"/>
			<designed target="Font" value="Sans Serif,8,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="ButtonPressed">
				<body kind="javascript">
					<![CDATA[var severityStr = Severity.TextEdit_1.Text;
var messageStr = Message.TextEdit_1.Text;
var sourceStr = Source.TextEdit_1.Text;
var objectInfo = {};
var acknowState = here.Acknow.ComboBox_1.SelectedIndex;
var JSONStr;
var acknowStr;
var Acknow;
objectInfo['AND'] = [];
//Формируем JSON запрос в случае, если соответствующее поле фильтра заполнено
if (severityStr.length > 0) 
{
	try
	{
		severityStr = MakeRequestJSON(severityStr,"severity");
		if (severityStr == "error" || !Link_Alarms.SetAdvancedRequestFilterAsJson(severityStr)) throw 'myException';
		severityStr = JSON.parse(severityStr);
		objectInfo[objectInfo['AND'].push(severityStr)];
	}
	catch(err)
	{
		Severity.RecBorder_Alarm.Visible = true;
		Journal.Text_1.Text = "Ошибка формирования запроса фильтра. Проверьте корректность введенных данных";
	}
}
if (messageStr.length > 0)
{
	try
	{
		messageStr = MakeRequestJSON(messageStr,"message");
		if (messageStr == "error" || !Link_Alarms.SetAdvancedRequestFilterAsJson(messageStr)) throw 'myException';
		messageStr = JSON.parse(messageStr);
		objectInfo[objectInfo['AND'].push(messageStr)];
	}
	catch(err)
	{
		Message.RecBorder_Alarm.Visible = true;
		Journal.Text_1.Text = "Ошибка формирования запроса фильтра. Проверьте корректность введенных данных";
	}
}
if (sourceStr.length > 0)
{
	try
	{
		sourceStr = MakeRequestJSON(sourceStr,"source");
		if (sourceStr == "error" || !Link_Alarms.SetAdvancedRequestFilterAsJson(sourceStr)) throw 'myException';
		sourceStr = JSON.parse(sourceStr);
		objectInfo[objectInfo['AND'].push(sourceStr)];
	}
	catch(err)
	{
		Source.RecBorder_Alarm.Visible = true;
		Journal.Text_1.Text = "Ошибка формирования запроса фильтра. Проверьте корректность введенных данных";
	}
}

if (here.Acknow.ComboBox_1.GetItem(acknowState) != "Все") 
{
	if (here.Acknow.ComboBox_1.GetItem(acknowState) == "Квитированные")
	{
		Acknow = '{"acked": true}';
		acknowStr = JSON.parse(Acknow);
	}
	else
	{
		Acknow = '{"acked": false}';
		acknowStr = JSON.parse(Acknow);
	}
	objectInfo[objectInfo['AND'].push(acknowStr)];
}

if (Source.RecBorder_Alarm.Visible != true && Message.RecBorder_Alarm.Visible != true && Severity.RecBorder_Alarm.Visible != true) 
{
	//записываем объект в виде строки. Если было заполнено только одно поле фильтра - выводим это поле, иначе - массив полей.
	if (objectInfo['AND'].length > 1) JSONStr = JSON.stringify(objectInfo);
	else JSONStr = JSON.stringify(objectInfo['AND'][0]);
	
	//Передача строки в функцию фильтрации (если true - без ошибок)
	Link_Alarms.SetAdvancedRequestFilterAsJson(JSONStr);
	
	//Сохранение данных
	Link_Alarms.Main_panel.private.RequestFilter.severity = Severity.TextEdit_1.Text;
	Link_Alarms.Main_panel.private.RequestFilter.message = Message.TextEdit_1.Text;
	Link_Alarms.Main_panel.private.RequestFilter.source = Source.TextEdit_1.Text;
	Link_Alarms.Main_panel.private.RequestFilter.acknow = here.Acknow.ComboBox_1.GetItem(here.Acknow.ComboBox_1.SelectedIndex);
	
	//Функция вывода данных после запроса
	DataRefresh();
	Close();
}
else Journal.Text_1.Text = "Ошибка формирования запроса фильтра. Проверьте корректность введенных данных";]]>
				</body>
			</do-on>
		</object>
	</object>
	<object access-modifier="private" name="Link_Alarms" display-name="Link_Alarms" uuid="9d764a16-3cdd-4c82-8f51-e6e34c5233c4" base-type="Alarms" base-type-id="e8a9dba0-e07f-4bfe-95f9-b75887e3f21b" base-const="true" base-ref="true" ver="2"/>
	<object access-modifier="private" name="private" display-name="private" uuid="a0e9ce61-4699-4e25-868d-d3d0037046c5" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="3" ver="2"/>
		<designed target="Y" value="36" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="9.42857" ver="2"/>
		<designed target="Height" value="5.42857" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="0" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
	</object>
	<object access-modifier="private" name="Severity" display-name="Severity" uuid="c9c25859-7264-4650-b1a2-d9339a06a801" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="28" ver="2"/>
		<designed target="Y" value="28" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="370" ver="2"/>
		<designed target="Height" value="30" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="0" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
		<object access-modifier="private" name="Text_1" display-name="Text_1" uuid="f50c2391-8453-4fd2-8e24-fa16570b3c00" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="2">
			<designed target="X" value="-10" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="67.8501" ver="2"/>
			<designed target="Height" value="20" ver="2"/>
			<designed target="Text" value="Важность:" ver="2"/>
			<designed target="Font" value="Sans Serif,9,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<designed target="TextAlignment" value="129" ver="2"/>
		</object>
		<object access-modifier="private" name="TextEdit_1" display-name="TextEdit_1" uuid="20838765-1bd3-4ece-8ed8-27d5513f058e" base-type="TextEdit" base-type-id="53a97863-93f3-45a1-a2ea-9ff98d2dcdd9" ver="2">
			<designed target="X" value="118" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="254" ver="2"/>
			<designed target="Height" value="25" ver="2"/>
			<designed target="Text" value="" ver="2"/>
			<designed target="Font" value="Sans Serif,8,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<designed target="TextAlignment" value="129" ver="2"/>
			<designed target="HideInput" value="false" ver="2"/>
			<designed target="PlaceholderText" value="" ver="2"/>
			<designed target="ReadOnly" value="false" ver="2"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="EditFinished">
				<body kind="javascript">
					<![CDATA[Severity.RecBorder_Alarm.Visible = false;
/*var str = Severity.TextEdit_1.Text;
//Инициализируем шаблоны
//последовательная запись аргументов
var mask1 = /[><=]\d+\s*[><=]\d+/g;
//повторение знаков
var mask2 = /[>]{2}|[<]{2}|[=]{2}|(><)|(<>)/g;
//наличие букв латинского алфавита
var mask3 = /\D[A-Za-z]/g;
//проверка на соответствие записи типа аргумент-операнд-аргумент
var mask4 =/[><=]*\d*[()]*\s*(\&\s*(НЕ)?[!]?|И\s*(НЕ)?[!]?|ИЛИ\s*(НЕ)?[!]?|\|\s*(НЕ)?[!]?|\s*(НЕ)?\s*[!]?){1}\s*[()]*[><=]+\d+/g;
//наличие кириллицы
var mask5 = /[А-Яа-я]/g;
var count = 0;
//общий паттерн
var elementPattern = /([(]|[)]|(НЕ)|(ИЛИ)|(И)|[!]|[&]|[|]|[<>=\d*]+)/igu;
var errorArray = [];
var commonArray = [];

commonArray = str.match(elementPattern);
//опеределяем количество скобок
if (commonArray != null) 
{
	for (let i = 0; i < commonArray.length; i++)
	{
		if (commonArray[i] == "(") count++;
		if (commonArray[i] == ")") count--;
	}
}
//тестируем строку по каждому шаблону
errorArray.push(mask1.test(str));
errorArray.push(mask2.test(str));
errorArray.push(mask3.test(str));
//в этих случаях несовпадение с шаблоном = неправильная запись
str = str.replace(mask4,"");
errorArray.push(mask5.test(str));
//удаляем правильные совпадения
str = str.replace(/[!]*[><=]+\d+/g,"");
str = str.replace(/[(]/g,"");
str = str.replace(/[)]/g,"");
//если в строке что-то осталось или массив ошибок содержит ошибки, то подсвечиваем рамку
if ((str.length > 0 && str != "")|| errorArray[0] || errorArray[1] || errorArray[2] || errorArray[3] || count != 0) 
{
	Severity.RecBorder_Alarm.Visible = true;
	Journal.Text_1.Text = "Условия фильтрации содержат ошибки";
}
bErrorFlag = Severity.RecBorder_Alarm.Visible;*/]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="RecBorder_Alarm" display-name="RecBorder_Alarm" uuid="83adbaab-ce96-48bd-bf09-32a98db114a9" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
			<designed target="X" value="118" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="false" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="253" ver="2"/>
			<designed target="Height" value="20" ver="2"/>
			<designed target="RoundingRadius" value="0" ver="2"/>
			<designed target="PenColor" value="0xffff0000" ver="2"/>
			<designed target="PenStyle" value="1" ver="2"/>
			<designed target="PenWidth" value="2" ver="2"/>
			<designed target="BrushColor" value="4278190080" ver="2"/>
			<designed target="BrushStyle" value="0" ver="2"/>
			<object access-modifier="private" name="Text_Alarm" display-name="Text_Alarm" uuid="41391743-3d32-4052-b8aa-314e2a7c22d2" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="2">
				<designed target="X" value="-6.82143" ver="2"/>
				<designed target="Y" value="1.84524" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="false" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="6.16667" ver="2"/>
				<designed target="Height" value="16.5" ver="2"/>
				<designed target="Text" value="!" ver="2"/>
				<designed target="Font" value="MS Shell Dlg 2,10,-1,5,75,0,0,0,0,0,Полужирный" ver="2"/>
				<designed target="FontColor" value="0xffff0000" ver="2"/>
				<designed target="TextAlignment" value="33" ver="2"/>
			</object>
		</object>
	</object>
	<object access-modifier="private" name="Message" display-name="Message" uuid="96fdcbc0-6b9d-4b08-b90c-7328f965954f" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="28" ver="2"/>
		<designed target="Y" value="58" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="370" ver="2"/>
		<designed target="Height" value="30" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="0" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
		<object access-modifier="private" name="Text_1" display-name="Text_1" uuid="2cd0b639-d666-4edf-bd4e-66e3bd24877a" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="2">
			<designed target="X" value="-10" ver="2"/>
			<designed target="Y" value="4" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="108.269" ver="2"/>
			<designed target="Height" value="20" ver="2"/>
			<designed target="Text" value="Сообщение:" ver="2"/>
			<designed target="Font" value="Sans Serif,9,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<designed target="TextAlignment" value="129" ver="2"/>
		</object>
		<object access-modifier="private" name="TextEdit_1" display-name="TextEdit_1" uuid="7b3fc42b-43b7-4691-9654-c6cbc4a3eb39" base-type="TextEdit" base-type-id="53a97863-93f3-45a1-a2ea-9ff98d2dcdd9" ver="2">
			<designed target="X" value="118" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="254" ver="2"/>
			<designed target="Height" value="25" ver="2"/>
			<designed target="Text" value="" ver="2"/>
			<designed target="Font" value="Sans Serif,8,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="0xff000000" ver="2"/>
			<designed target="TextAlignment" value="129" ver="2"/>
			<designed target="HideInput" value="false" ver="2"/>
			<designed target="PlaceholderText" value="" ver="2"/>
			<designed target="ReadOnly" value="false" ver="2"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="EditFinished">
				<body kind="javascript">
					<![CDATA[Message.RecBorder_Alarm.Visible = false;
/*var str = Message.TextEdit_1.Text;
//Инициализируем шаблоны
//повторение знаков
var mask1 = /[!]{2}|[=]{2}/g;
var count = 0;

//паттерн элемента
var elementPattern = /[(]|[)]|(НЕ)|(ИЛИ)|(И)|[!]|[&]|[|]|(\s*[А-Яа-я0-9A-Za-z ?!=;,._-]*[^&()|]\s*)/g;
//паттер оператора
var operatorPattern = /([&])|([ИЛИ]+)|([|])|(И)/g;
var errorArray = [];
var commonArray = [];

commonArray = str.match(elementPattern);
//опеределяем количество скобок
if (commonArray != null) 
{
	for (let i = 0; i < commonArray.length; i++)
	{
		if (commonArray[i] == "(") count++;
		if (commonArray[i] == ")") count--;
	}
}
//тестируем строку по каждому шаблону
errorArray.push(mask1.test(str));
//если в строке что-то осталось или массив ошибок содержит ошибки, то подсвечиваем рамку
if (errorArray[0] || count != 0) 
{
	Message.RecBorder_Alarm.Visible = true;
	Journal.Text_1.Text = "Условия фильтрации содержат ошибки";
}
bErrorFlag = Message.RecBorder_Alarm.Visible;
*/]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="RecBorder_Alarm" display-name="RecBorder_Alarm" uuid="779f4173-4925-4da0-b59c-7393b22ecb58" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
			<designed target="X" value="118" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="false" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="253" ver="2"/>
			<designed target="Height" value="20" ver="2"/>
			<designed target="RoundingRadius" value="0" ver="2"/>
			<designed target="PenColor" value="0xffff0000" ver="2"/>
			<designed target="PenStyle" value="1" ver="2"/>
			<designed target="PenWidth" value="2" ver="2"/>
			<designed target="BrushColor" value="4278190080" ver="2"/>
			<designed target="BrushStyle" value="0" ver="2"/>
			<object access-modifier="private" name="Text_Alarm" display-name="Text_Alarm" uuid="fb5d1127-c393-4a6d-9500-5d50544db5b7" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="2">
				<designed target="X" value="-6.82143" ver="2"/>
				<designed target="Y" value="1.84524" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="true" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="6.16667" ver="2"/>
				<designed target="Height" value="16.5" ver="2"/>
				<designed target="Text" value="!" ver="2"/>
				<designed target="Font" value="MS Shell Dlg 2,10,-1,5,75,0,0,0,0,0,Полужирный" ver="2"/>
				<designed target="FontColor" value="0xffff0000" ver="2"/>
				<designed target="TextAlignment" value="33" ver="2"/>
			</object>
		</object>
	</object>
	<object access-modifier="private" name="Source" display-name="Source" uuid="fd0adf91-f572-4ba8-a05f-9755da83083c" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="28" ver="2"/>
		<designed target="Y" value="88" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="370" ver="2"/>
		<designed target="Height" value="30" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="0" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
		<object access-modifier="private" name="Text_1" display-name="Text_1" uuid="d750990e-853b-4a0c-803a-69f99209edb1" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="2">
			<designed target="X" value="-10" ver="2"/>
			<designed target="Y" value="4" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="129.1" ver="2"/>
			<designed target="Height" value="20" ver="2"/>
			<designed target="Text" value="Источник события:" ver="2"/>
			<designed target="Font" value="Sans Serif,9,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<designed target="TextAlignment" value="129" ver="2"/>
		</object>
		<object access-modifier="private" name="TextEdit_1" display-name="TextEdit_1" uuid="7f79843e-1bd8-4bef-b93f-c5b782f4f239" base-type="TextEdit" base-type-id="53a97863-93f3-45a1-a2ea-9ff98d2dcdd9" ver="2">
			<designed target="X" value="118" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="254" ver="2"/>
			<designed target="Height" value="25" ver="2"/>
			<designed target="Text" value="" ver="2"/>
			<designed target="Font" value="Sans Serif,8,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="0xff000000" ver="2"/>
			<designed target="TextAlignment" value="129" ver="2"/>
			<designed target="HideInput" value="false" ver="2"/>
			<designed target="PlaceholderText" value="" ver="2"/>
			<designed target="ReadOnly" value="false" ver="2"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="EditFinished">
				<body kind="javascript">
					<![CDATA[Source.RecBorder_Alarm.Visible = false;
/*var str = Source.TextEdit_1.Text;
//Инициализируем шаблоны
//повторение знаков
var mask1 = /[!]{2}|[=]{2}/g;
var count = 0;

//общий паттерн
var elementPattern = /([(]|[)]|(НЕ)|(ИЛИ)|(И)|[!]|[&]|[|]|[<>=\d*\w*[А-Яа-я]+)/igu;
var errorArray = [];

var commonArray = str.match(elementPattern);
//опеределяем количество скобок
if (commonArray != null) 
{
	for (let i = 0; i < commonArray.length; i++)
	{
		if (commonArray[i] == "(") count++;
		if (commonArray[i] == ")") count--;
	}
}
//тестируем строку по каждому шаблону
errorArray.push(mask1.test(str));
//если в строке что-то осталось или массив ошибок содержит ошибки, то подсвечиваем рамку
if (errorArray[0] || count != 0) 
{
	Source.RecBorder_Alarm.Visible = true;
	Journal.Text_1.Text = "Условия фильтрации содержат ошибки";
}
bErrorFlag = Source.RecBorder_Alarm.Visible;*/]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="RecBorder_Alarm" display-name="RecBorder_Alarm" uuid="b168695e-0b15-4459-964f-6b0839b27e66" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
			<designed target="X" value="118" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="false" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="253" ver="2"/>
			<designed target="Height" value="20" ver="2"/>
			<designed target="RoundingRadius" value="0" ver="2"/>
			<designed target="PenColor" value="0xffff0000" ver="2"/>
			<designed target="PenStyle" value="1" ver="2"/>
			<designed target="PenWidth" value="2" ver="2"/>
			<designed target="BrushColor" value="4278190080" ver="2"/>
			<designed target="BrushStyle" value="0" ver="2"/>
			<object access-modifier="private" name="Text_Alarm" display-name="Text_Alarm" uuid="901ea04d-77a0-4e1a-87a6-5b04ef69bbc0" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="2">
				<designed target="X" value="-6.82143" ver="2"/>
				<designed target="Y" value="1.84524" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="true" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="6.16667" ver="2"/>
				<designed target="Height" value="16.5" ver="2"/>
				<designed target="Text" value="!" ver="2"/>
				<designed target="Font" value="MS Shell Dlg 2,10,-1,5,75,0,0,0,0,0,Полужирный" ver="2"/>
				<designed target="FontColor" value="0xffff0000" ver="2"/>
				<designed target="TextAlignment" value="33" ver="2"/>
			</object>
		</object>
	</object>
	<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="Opened">
		<body kind="javascript">
			<![CDATA[Severity.TextEdit_1.Text = Link_Alarms.Main_panel.private.RequestFilter.severity;
Message.TextEdit_1.Text = Link_Alarms.Main_panel.private.RequestFilter.message;
Source.TextEdit_1.Text = Link_Alarms.Main_panel.private.RequestFilter.source;
var acknow = Link_Alarms.Main_panel.private.RequestFilter.acknow;
//Заполняем combobox
if (acknow != "")
{
	Acknow.ComboBox_1.AddItem("");
	if (acknow == "Квитированные") 
	{
		Acknow.ComboBox_1.SetItem(0,acknow);
		Acknow.ComboBox_1.AddItem("Неквитированные");
		Acknow.ComboBox_1.AddItem("Все");
	}
	else if (acknow == "Неквитированные")
	{ 
		Acknow.ComboBox_1.SetItem(0,acknow);
		Acknow.ComboBox_1.AddItem("Квитированные");
		Acknow.ComboBox_1.AddItem("Все");
	}
	else
	{
		Acknow.ComboBox_1.SetItem(0,acknow);
		Acknow.ComboBox_1.AddItem("Неквитированные");
		Acknow.ComboBox_1.AddItem("Квитированные");
	}
}
else
{
	Acknow.ComboBox_1.AddItem("Все");
	Acknow.ComboBox_1.AddItem("Неквитированные");
	Acknow.ComboBox_1.AddItem("Квитированные");
}

bErrorFlag = false;
ReadTitle();
Focus = true; //Переводим Focus на форму для обработки нажатия клавиш

Window_close_line_1.Rectangle_windowline_base.Text_windowname.Text = WindowCaption;
Window_close_line_1.notifying_WindowWidth_now = WindowWidth;
]]>
		</body>
	</do-on>
	<object access-modifier="private" name="Journal" display-name="Journal" uuid="132a873a-a0b4-4d0d-9055-8ce96af02fee" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="21" ver="2"/>
		<designed target="Y" value="151.4" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="378.4" ver="2"/>
		<designed target="Height" value="36" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="0xffb3b3b3" ver="2"/>
		<designed target="PenStyle" value="1" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
		<object access-modifier="private" name="Text_1" display-name="Text_1" uuid="3c0448aa-ed03-4bb0-9ad6-aade02e9b4f9" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="2">
			<designed target="X" value="2.73333" ver="2"/>
			<designed target="Y" value="2" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="372" ver="2"/>
			<designed target="Height" value="31" ver="2"/>
			<designed target="Text" value="Заполните поля фильтра" ver="2"/>
			<designed target="Font" value="Sans Serif,8,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<designed target="TextAlignment" value="132" ver="2"/>
		</object>
	</object>
	<object access-modifier="private" name="bErrorFlag" display-name="bErrorFlag" uuid="c2b7a4c4-df43-4722-8f32-aa571bb894e4" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="2">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
			<body kind="javascript">
				<![CDATA[var error = (Severity.RecBorder_Alarm.Visible || Message.RecBorder_Alarm.Visible|| Source.RecBorder_Alarm.Visible)
Main_FilterForm.Button_Apply.Enabled = !error;
if (!error) Journal.Text_1 = "";




]]>
			</body>
		</do-on>
	</object>
	<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="3" event="KeyPress">
		<body kind="om">
			<![CDATA[vi: uint4 = event.KeyCode;
if (vi==75) Close();
]]>
		</body>
	</do-on>
	<do access-modifier="private" name="CheckValueInt" display-name="CheckValueInt" ver="3" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" form-by-id="true">
		<param access-modifier="private" name="inputValue" display-name="" uuid="e7478ddd-cb1b-4003-857f-06ea3e5f690a" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
		<body kind="javascript">
			<![CDATA[//Функция проверки корректности ввода значений типа int
var str = inputValue;
//Инициализируем шаблоны
//последовательная запись аргументов
var mask1 = /[><=]\d+\s*[><=]\d+/g;
//повторение или неверная запись логических знаков
var mask2 = /[>]{2}|[<]{2}|[=]{3}|[!]{2}|(><)|(<>)|(=>)|(=<)|(НЕ!)|(!НЕ)/g;
//наличие букв латинского алфавита
var mask3 = /\D[A-Za-z]/g;
//проверка на соответствие записи типа аргумент-операнд-аргумент
var mask4 =/[!><=]*\d*[()]*\s*(\&\s*(НЕ)?[!]?|И\s*(НЕ)?[!]?|ИЛИ\s*(НЕ)?[!]?|\|\s*(НЕ)?[!]?|\s*(НЕ)?\s*[!]?){1}\s*[()]*[!><=]+\d+/g;
//наличие кириллицы
var mask5 = /[А-Яа-я]/g;
//число начинается с 0
var mask6 = /[><=][0][0-9]/;
var count = 0;
//общий паттерн
var elementPattern = /([(]|[)]|(НЕ)|(ИЛИ)|(И)|[!]|[&]|[|]|[<>=\d*]+)/igu;
var errorArray = [];
var commonArray = [];

commonArray = str.match(elementPattern);
//опеределяем количество скобок
if (commonArray != null) 
{
	for (let i = 0; i < commonArray.length; i++)
	{
		if (commonArray[i] == "(") count++;
		if (commonArray[i] == ")") count--;
	}
}
//тестируем строку по каждому шаблону
errorArray.push(mask1.test(str));
errorArray.push(mask2.test(str));
errorArray.push(mask3.test(str));
errorArray.push(mask6.test(str));

//в этих случаях несовпадение с шаблоном = неправильная запись
str = str.replace(mask4,"");
errorArray.push(mask5.test(str));
//удаляем правильные совпадения
str = str.replace(/[!]*[><=]+\d+/g,"");
str = str.replace(/[(]/g,"");
str = str.replace(/[)]/g,"");

//если в строке что-то осталось или массив ошибок содержит ошибки, то возвращаем false
if ((str.length > 0 && str != "")|| errorArray[0] || errorArray[1] || errorArray[2] || errorArray[3] || errorArray[4] || count != 0) return false;
return true;
]]>
		</body>
	</do>
	<do access-modifier="private" name="CheckValueString" display-name="CheckValueString" ver="3" type="bool" type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8">
		<body kind="javascript">
			<![CDATA[//Функция проверки корректности ввода значений типа string
var str = inputString;
//Инициализируем шаблоны
//повторение знаков
var mask1 = /[!]{2}|[=]{2}/g;
var count = 0;

//паттерн элемента
var elementPattern = /[(]|[)]|(НЕ)|(ИЛИ)|(И)|[!]|[&]|[|]|(\s*[А-Яа-я0-9A-Za-z ?!=;,._-]*[^&()|]\s*)/g;
//паттер оператора
var operatorPattern = /([&])|([ИЛИ]+)|([|])|(И)/g;
var errorArray = [];
var commonArray = [];

commonArray = str.match(elementPattern);
//опеределяем количество скобок
if (commonArray != null) 
{
	for (let i = 0; i < commonArray.length; i++)
	{
		if (commonArray[i] == "(") count++;
		if (commonArray[i] == ")") count--;
	}
}
//тестируем строку по каждому шаблону
errorArray.push(mask1.test(str));
//если в строке что-то осталось или массив ошибок содержит ошибки, то возвращаем false
if (errorArray[0] || count != 0) return false;
return true

]]>
		</body>
		<param access-modifier="private" name="inputString" display-name="" uuid="8a6ecd2e-417a-42c7-aec2-04c024d28ae4" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="3"/>
	</do>
	<do access-modifier="private" name="MakeRequestJSON" display-name="MakeRequestJSON" ver="2" type="string" type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d">
		<body kind="javascript">
			<![CDATA[//Функция преобразует исходную строк в формат JSON: проводит поиск по шаблонам и составляет массив элементов, затем применяется обратная польская запись для определения порядка действий;
//определяются логические операторы и происходит поэтапное формирование логических выражений из элементов массива и происходит формирование строки в json формате
var resultArray = [];
var operatorArray = [];
var gravityPrev = 0;
var gravity = 0;
var objectInfo = {};
var prevPrevElem = '';
var prevElem = '';
var jsonStr = '';
var elementPattern;
var signPattern;
var argumentPattern;
var commonArrayStr;
var operatorPattern;
var tempArray =[];
try{
//Проверка корректности ввода поля
if (source == "severity") if (!CheckValueInt(inputString)) return "error";
if (source == "time") if (!CheckValueDateTime(inputString)) return "error";
if (source == "message") if (!CheckValueString(inputString)) return "error";

//Инициализируем шаблон на поиск операторов, чисел и операндов
if (source == "severity")elementPattern = elementPattern = /[(]|[)]|(НЕ)|(ИЛИ)|(И)|[&]|[|]|[!<>=\d*]+/igu;
else elementPattern = /[)]\s*(И)\s*[!]*(НЕ)*\s*[(]|[)]\s*(ИЛИ)\s*[!]*(НЕ)*\s*[(]|[)]\s*(&)\s*[!]*(НЕ)*\s*[(]|[)]\s*(\|)\s*[!]*(НЕ)*\s*[(]/g;
//Шаблон логического оператора
if (source == "severity") operatorPattern = /([(]|[)])|([&])|([ИЛИ]+)|([|])|(И)|(НЕ)|([!](?![=]))/;
else operatorPattern = /^\s*([&])\s*$|^\s*(ИЛИ)\s*$|(^\s*[|]\s*$)|^\s*(И)\s*$|^\s*(НЕ)\s*$|(^\s*[!]\s*$)/;

//Шаблон знака
if (source == "severity")signPattern = /([!><=]+)/g;
else signPattern = /([=]*)/g;
//Шаблон числа
var numberPattern = /(\d+)/g;
//Шаблон аргумента
if (source == "severity") argumentPattern = /(\d+)/;
else argumentPattern = /(.*)/;
//Шаблон массива
var arrayPattern = /object/;
//Заполняем массив символами строки
var commonArray = inputString.match(elementPattern);

//Обработка входной строки в случае работы с фильтром сообщений и источника
if (source != "severity")
{	
	//Логические операторы обозначаем знаками ^^, для разделения строки и записи в массив
	let temp = inputString.replace(elementPattern,'^$&^');
	tempArray = temp.split("^");
		//Если отсутствуют логические элементы
	if (tempArray.length == 1) 
	{
		//Если есть отрицание
		if (/[!]\s*[(]|(НЕ)\s*[(]/.test(tempArray[0])) 
		{
			if (/[!]\s*[(]/.test(tempArray[0])) 
			{
				tempArray[0] = tempArray[0].replace(/[!]/,"")
				tempArray.splice(0,0,"!");
			}
			if (/(НЕ)\s*[(]/g.test(tempArray[0])) 
			{
				tempArray[0] = tempArray[0].replace(/(НЕ)/,"")
				tempArray.splice(0,0,"НЕ");
			}
			tempArray[1] = tempArray[1].replace(/^[(]/,"");
			tempArray[1] = tempArray[1].replace(/[)]$/,"");
			
			if (!/[""].+[""]/g.test(tempArray[1])) tempArray[1] = tempArray[1].replace(/[А-Яа-яA-Za-z]+/,"*$&*");
			else tempArray[1] = tempArray[1].replace(/["]["]/g,"");
		}
		else
		{
			if (!/[""].+[""]/g.test(tempArray[0])) tempArray[0] = tempArray[0].replace(/[А-Яа-яA-Za-z]+/,"*$&*");
			else tempArray[0] = tempArray[0].replace(/["]["]/g,"");
		}
	}
	else{
	for (let i = 0; i < tempArray.length; i++)
	{
		//Если элемент - логический оператор
		if (elementPattern.test(tempArray[i])) 
		{	
			//удаляем скобки
			tempArray[i] = tempArray[i].replace(/[)(]/g,"");
			tempArray[i-1] = tempArray[i-1].replace(/^[(]/,"");
			tempArray[i+1] = tempArray[i+1].replace(/[)]$/,"");
			//В случае, если стоят двойные "", то элемент идет как точное соответствие
			if (!/[""].+[""]/g.test(tempArray[i-1])) tempArray[i-1] = tempArray[i-1].replace(/[А-Яа-яA-Za-z]+/,"*$&*");
			else tempArray[i-1] = tempArray[i-1].replace(/["]["]/g,"");
			if (!/[""].+[""]/g.test(tempArray[i+1]) && i == tempArray.length -2) tempArray[i+1] = tempArray[i+1].replace(/[А-Яа-яA-Za-z]+/,"*$&*");
			else tempArray[i+1] = tempArray[i+1].replace(/["]["]/g,"");
			//Обработка отрицаний
			if (/[!]/g.test(tempArray[i])) 
			{
				tempArray[i] = tempArray[i].replace(/[!]/,"");
				tempArray.splice(i+1,0,"!");
			}
			if (/НЕ/g.test(tempArray[i])) 
			{
				tempArray[i] = tempArray[i].replace(/НЕ/,"");
				tempArray.splice(i+1,0,"НЕ");
			}
		}
		else
		{
			//Обработка отрицаний
			if (/[!][(]/g.test(tempArray[i])) 
			{
				tempArray[i] = tempArray[i].replace(/[!]/,"");
				tempArray.splice(i,0,"!");
			}
			if (/(НЕ)[(]/g.test(tempArray[i])) 
			{
				tempArray[i] = tempArray[i].replace(/НЕ/,"");
				tempArray.splice(i,0,"НЕ");
			}
		}
	}
	}
	commonArray = tempArray;
}

//Если пустая строка, то возвращаем 0
if (commonArray == null) return "error";

//Функция опеределения веса оператора
function GravityValue(gravity)
{
	switch(gravity)
	{
		case 'И':
		case '&':
			gravity = 2;
			break;
		case 'ИЛИ':
		case '|':
			gravity = 1;
			break;
		case '(':
			gravity = 4;
			break;
		case ')':
			gravity = 5;
			break;
		case 'НЕ':
		case '!':
			gravity = 3;
			break;
	}
	return gravity;
}

//Фукнция получения выражения вида ">": { "severity": 10 }"
function MakeExpression(str)
{
	let sign;
	let number;
	let argument = str.match(argumentPattern);
	let expression = {};
	//Если фильтр по Важности, то заполняем строку в одном формате, если по Исчтонику и Сообщениям, то по другому
	if (source == 'severity')
	{
	 sign = str.match(signPattern);
	 expression = {[sign[0]]: {[source]:parseInt(argument)}};
	}
	else expression = {[source]:argument[0].toString().trim()};
	return expression
}

//Проходим поэлементно массив
for (let i = 0; i < commonArray.length; i++)
{	
	//Если элемент - логический оператор
	if (operatorPattern.test(commonArray[i]))
	{
		commonArray[i] = commonArray[i].trim();
		gravity = GravityValue(commonArray[i]);
		//В случае, если "("
		if (gravity == 4) 
		{
			operatorArray.push(commonArray[i]);
			continue;
		}

		//В случае, если ")" - скобка закрылась
		if (gravity == 5)
		{
			let bracketIndex = operatorArray.lastIndexOf("(", operatorArray.length-1)
			//Операторы, что былт в скобках, записываем в результирующий массив
			while (operatorArray.length - 1 != bracketIndex)resultArray.push(operatorArray.pop());
			operatorArray.pop();
		}
	
		//В случае, если предыдущий оператор имеет больший вес - записываем в результирующий массив кроме случае со ()
		if (operatorArray.length != null) gravityPrev = GravityValue(operatorArray[operatorArray.length-1]);
		while (gravityPrev >= gravity && gravityPrev != 4 && gravityPrev != 5 && operatorArray.length != 0)
		{
			resultArray.push(operatorArray.pop());
			gravityPrev = GravityValue(operatorArray[operatorArray.length-1]);
		}
		
		//")" - не записываем
		if (gravity != 5) operatorArray.push(commonArray[i]);
	}
	else resultArray.push(commonArray[i]);
	
	//Если массив кончился - записываем остатки операндов в результирующий массив
	if (i == commonArray.length - 1)
	{
		while (operatorArray.length != 0)
		{
			resultArray.push(operatorArray.pop());
		}
	}
}

//Формирование JSON-строки
for (let i = 0; i < resultArray.length; i++)
{
	//Если всего один элемент в массиве, то выводим только это условие
	if (resultArray.length == 1)if (!arrayPattern.test(resultArray[i]))jsonStr = MakeExpression(resultArray[i]);
	
	//Если условий несколько
	if (operatorPattern.test(resultArray[i]) && resultArray.length > 1)
	{
		let notExpression;
		let operator = resultArray[i].match(/[&]|[|]|[!]|(ИЛИ)+|(И)|(НЕ)/);
		switch(operator[0])
		{
			case '&':
			case 'И':
				operator = 'AND';
				break;
			case '|':
			case 'ИЛИ':
				operator = 'OR';
				break;
			case '!':
			case 'НЕ':
				operator = 'NOT';
				//В случае, если есть отрицание, применяем к скобкам или выражению
				if (!arrayPattern.test(resultArray[i-1]))prevElem = MakeExpression(resultArray[i-1]);
				else prevElem = resultArray[i-1];
				notExpression = {'NOT': prevElem};
				jsonStr = JSON.stringify(notExpression);
				jsonStr = JSON.parse(jsonStr);
				resultArray.splice(i-1, 2, jsonStr);
				i-= 1;
				objectInfo = {};
				continue;
		}
		
		//Считываем элемент i-2 и i-1, если это не объекты - преобразуем
		if (!arrayPattern.test(resultArray[i-2]))prevPrevElem = MakeExpression(resultArray[i-2]);
		else prevPrevElem = resultArray[i-2];
		if (!arrayPattern.test(resultArray[i-1]))prevElem = MakeExpression(resultArray[i-1]);
		else prevElem = resultArray[i-1];

		//Создаем объект с именем оператора, который является массивом и заполняем его
		objectInfo[`${operator}`] = [];
		objectInfo[objectInfo[`${operator}`].push(prevPrevElem)];
		objectInfo[objectInfo[`${operator}`].push(prevElem)];
		
		//записываем объект в виде строки
		jsonStr = JSON.stringify(objectInfo);
		jsonStr = JSON.parse(jsonStr);
		
		//Заменяем элементы i-2 и i-1 на полученное выражение
		resultArray.splice(i-2, 3, jsonStr);
		i-= 2;
		objectInfo = {};
		
		//В случае последнего прохода строку не обнуляем
		if (i >= 2) jsonStr = '';
	}
}
jsonStr = JSON.stringify(jsonStr);
if (jsonStr == '""') throw 'myException';
log(jsonStr);
return jsonStr;
}
catch(err)
{
	return "error";
}]]>
		</body>
		<param access-modifier="private" name="inputString" display-name="" uuid="94c437ea-dc7c-4590-b340-839d1a301c04" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
		<param access-modifier="private" name="source" display-name="" uuid="2d748526-a04e-4371-be05-dfed3fc08435" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="2"/>
	</do>
	<do access-modifier="private" name="DataRefresh" display-name="DataRefresh" ver="2" type="" type-id="">
		<body kind="om">
			<![CDATA[if (Link_Alarms.ActiveMode==1)
{
	Link_Alarms.Main_tables_1.Table_History_mode.ClearData();
	Link_Alarms.SetHistoricalInterval(DateTime.Parse(Link_Alarms.Main_panel.ToolBar.RecHistory.DayMonthYear_start.Text)-TimeZone(),DateTime.Parse(Link_Alarms.Main_panel.ToolBar.RecHistory.DayMonthYear_final.Text)-TimeZone());
}
]]>
		</body>
	</do>
	<do access-modifier="private" name="TimeZone" display-name="TimeZone" ver="2" type="uint8" type-id="c8ff7701-da6e-4d53-888a-81fa680ff561">
		<body kind="om">
			<![CDATA[time_zone: uint8 = DateTime.Now()-DateTime.UtcNow();
return (time_zone);]]>
		</body>
	</do>
	<object access-modifier="private" name="private_1" display-name="private_1" uuid="578e5061-2cc7-4cfc-9614-cd019e2204be" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="54.2857" ver="2"/>
		<designed target="Y" value="118.286" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="9.42857" ver="2"/>
		<designed target="Height" value="5.42857" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="0" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
	</object>
	<object access-modifier="private" name="Acknow" display-name="Acknow" uuid="69fcb9ca-b505-4e57-a73d-a93d2017cb90" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="16" ver="2"/>
		<designed target="Y" value="118" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="400" ver="2"/>
		<designed target="Height" value="30" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="0" ver="2"/>
		<designed target="PenWidth" value="0" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
		<object access-modifier="private" name="Text_1" display-name="Text_1" uuid="81ca7202-4b19-450f-900d-cb927f80188f" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="2">
			<designed target="X" value="2" ver="2"/>
			<designed target="Y" value="4" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="116.017" ver="2"/>
			<designed target="Height" value="20" ver="2"/>
			<designed target="Text" value="Квитировано:" ver="2"/>
			<designed target="Font" value="Sans Serif,9,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<designed target="TextAlignment" value="129" ver="2"/>
		</object>
		<object access-modifier="private" name="RecBorder_Alarm" display-name="RecBorder_Alarm" uuid="4837226f-1dd8-4dbd-b251-e7c0671700bc" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
			<designed target="X" value="133" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="false" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="253" ver="2"/>
			<designed target="Height" value="20" ver="2"/>
			<designed target="RoundingRadius" value="0" ver="2"/>
			<designed target="PenColor" value="0xffff0000" ver="2"/>
			<designed target="PenStyle" value="1" ver="2"/>
			<designed target="PenWidth" value="2" ver="2"/>
			<designed target="BrushColor" value="4278190080" ver="2"/>
			<designed target="BrushStyle" value="0" ver="2"/>
			<object access-modifier="private" name="Text_Alarm" display-name="Text_Alarm" uuid="31173384-3016-4286-9100-1e7d02a84e0d" base-type="Text" base-type-id="21d59f8d-2ca4-4592-92ca-b4dc48992a0f" ver="2">
				<designed target="X" value="-6.82143" ver="2"/>
				<designed target="Y" value="1.84524" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="true" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="6.16667" ver="2"/>
				<designed target="Height" value="16.5" ver="2"/>
				<designed target="Text" value="!" ver="2"/>
				<designed target="Font" value="MS Shell Dlg 2,10,-1,5,75,0,0,0,0,0,Полужирный" ver="2"/>
				<designed target="FontColor" value="0xffff0000" ver="2"/>
				<designed target="TextAlignment" value="33" ver="2"/>
			</object>
		</object>
		<object access-modifier="private" name="ComboBox_1" display-name="ComboBox_1" uuid="f11dad0c-2d07-4f49-b6a8-45a087158fcc" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="2">
			<designed target="X" value="130" ver="2"/>
			<designed target="Y" value="5" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="254" ver="2"/>
			<designed target="Height" value="25" ver="2"/>
			<designed target="Editable" value="false" ver="2"/>
			<designed target="Text" value="" ver="2"/>
			<designed target="SelectedIndex" value="-1" ver="2"/>
			<designed target="Font" value="Sans Serif,8,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<designed target="MaxVisibleItems" value="10" ver="2"/>
		</object>
	</object>
	<do access-modifier="private" name="ReadTitle" display-name="ReadTitle" ver="3" type="" type-id="">
		<body kind="javascript">
			<![CDATA[//Заполняем заголовки столбцов
var Title = [], Column = [];
var str = "";
var hint = "";

Title[0] = Severity;
Title[1] = Message;
Title[2] = Source;
Title[3] = Acknow;

Column[0] = Link_Alarms.Main_tables.Table_Operative_mode.Colum_6;
Column[1] = Link_Alarms.Main_tables.Table_Operative_mode.Colum_4;
Column[2] = Link_Alarms.Main_tables.Table_Operative_mode.Colum_5;
Column[3] = Link_Alarms.Main_tables.Table_Operative_mode.Colum_7;

//Если заголовок не входит в поле, то ставим многоточие и переносим полное имя в хинт
for (let i = 0; i < Title.length; i++)
{
	hint = "";
	str = Column[i].Title + ":";
	if (str.length > 25) 
	{
		hint = str;
		str = str.substr(0,22) + "...";
	}
	Title[i].Text_1.Text = str;
	Title[i].Text_1.Tooltip = hint;
}



]]>
		</body>
	</do>
	<object access-modifier="private" name="Window_close_line_1" display-name="Window_close_line_1" uuid="92ddd259-5317-45cd-81f5-83021a4ca5ff" base-type="Window_close_line" base-type-id="a70c35c1-3cb9-4d9e-8668-ddc931acbcf8" ver="3">
		<designed target="X" value="1" ver="3"/>
		<designed target="Y" value="1" ver="3"/>
		<designed target="Rotation" value="0" ver="3"/>
		<object access-modifier="private" name="mousePress" display-name="mousePress" uuid="7a156ab5-4492-4c8a-8bcc-bd94643d7535" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="3" event="MouseMove">
			<body kind="om">
				<![CDATA[if (mousePress) 
{
	here.WindowX = ScreenX(MouseX,MouseY) - TypeConvert.ToInt4(Pointer_press_x);
	here.WindowY = ScreenY(MouseX,MouseY);
}]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_3" display-name="Handler_3" ver="3" event="MousePress">
			<body kind="om">
				<![CDATA[mousePress = true;
Pointer_press_x = MouseX;
]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_4" display-name="Handler_4" ver="3" event="MouseRelease">
			<body kind="om">
				<![CDATA[mousePress = false;]]>
			</body>
		</do-on>
		<object access-modifier="private" name="Pointer_press_x" display-name="Pointer_press_x" uuid="d32a30ee-799e-4fe9-9c5e-951eb979df59" base-type="float8" base-type-id="7ad62ecf-96dd-4751-9b96-e77954b44409" ver="3"/>
		<object access-modifier="private" name="notifying_WindowWidth_now" display-name="notifying_WindowWidth_now" uuid="721a7606-6f11-4dfd-9287-1e9adc8a8929" base-type="notifying_float8" base-type-id="3f905fb7-7738-4619-b402-5a91f136d4bd" ver="3">
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ValueChanged">
				<body kind="om">
					<![CDATA[Window_close_line_1.Rectangle_windowline_base.Width = notifying_WindowWidth_now.Value - 2;
Window_close_line_1.Rectangle_windowline_base.Text_windowname.Width = Window_close_line_1.Rectangle_windowline_base.Width;

Window_close_line_1.Rectangle_windowline_base.Window_close_button_1.X = Window_close_line_1.Rectangle_windowline_base.Width - 22;
]]>
				</body>
			</do-on>
		</object>
	</object>
</type>

