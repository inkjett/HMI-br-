<type access-modifier="private" name="SortForm" display-name="Form_1" uuid="95d52964-3d3f-43d2-ad6f-f3cb68a1c51b" base-type="Form" base-type-id="ffaf5544-6200-45f4-87ec-9dd24558a9d5" ver="2">
	<designed target="X" value="0" ver="2"/>
	<designed target="Y" value="0" ver="2"/>
	<designed target="Rotation" value="0" ver="2"/>
	<designed target="Scale" value="1" ver="2"/>
	<designed target="Visible" value="true" ver="2"/>
	<designed target="Enabled" value="true" ver="2"/>
	<designed target="Tooltip" value="" ver="2"/>
	<designed target="Width" value="550" ver="2"/>
	<designed target="Height" value="401" ver="2"/>
	<designed target="PenColor" value="4278190080" ver="2"/>
	<designed target="PenStyle" value="0" ver="2"/>
	<designed target="PenWidth" value="1" ver="2"/>
	<designed target="BrushColor" value="4293980400" ver="2"/>
	<designed target="BrushStyle" value="1" ver="2"/>
	<designed target="WindowX" value="0" ver="2"/>
	<designed target="WindowY" value="0" ver="2"/>
	<designed target="WindowWidth" value="550" ver="2"/>
	<designed target="WindowHeight" value="401" ver="2"/>
	<designed target="WindowCaption" value="Сортировка" ver="2"/>
	<designed target="ShowWindowCaption" value="true" ver="2"/>
	<designed target="ShowWindowMinimize" value="false" ver="2"/>
	<designed target="ShowWindowMaximize" value="false" ver="2"/>
	<designed target="ShowWindowClose" value="true" ver="2"/>
	<designed target="AlwaysOnTop" value="false" ver="2"/>
	<designed target="WindowSizeMode" value="1" ver="2"/>
	<designed target="WindowBorderStyle" value="2" ver="2"/>
	<designed target="WindowState" value="0" ver="2"/>
	<designed target="WindowScalingMode" value="0" ver="2"/>
	<designed target="MonitorNumber" value="0" ver="2"/>
	<designed target="WindowPosition" value="2" ver="2"/>
	<designed target="WindowCloseMode" value="0" ver="2"/>
	<object access-modifier="private" name="Rectangle_1" display-name="Rectangle_1" uuid="a39b10d1-40c1-4ee5-8d1e-f5fccc94aa9f" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="2">
		<designed target="X" value="0.6" ver="2"/>
		<designed target="Y" value="1" ver="2"/>
		<designed target="Rotation" value="0" ver="2"/>
		<designed target="Scale" value="1" ver="2"/>
		<designed target="Visible" value="true" ver="2"/>
		<designed target="Enabled" value="true" ver="2"/>
		<designed target="Tooltip" value="" ver="2"/>
		<designed target="Width" value="543.834" ver="2"/>
		<designed target="Height" value="401" ver="2"/>
		<designed target="RoundingRadius" value="0" ver="2"/>
		<designed target="PenColor" value="4278190080" ver="2"/>
		<designed target="PenStyle" value="0" ver="2"/>
		<designed target="PenWidth" value="1" ver="2"/>
		<designed target="BrushColor" value="4278190080" ver="2"/>
		<designed target="BrushStyle" value="0" ver="2"/>
		<object access-modifier="private" name="Table_1" display-name="Table_1" uuid="b13223bb-b814-46a2-9443-93dbb64aeccd" base-type="Table" base-type-id="c65ff4dc-f22b-47d3-9333-72c4e4e5f662" ver="2">
			<designed target="X" value="0" ver="2"/>
			<designed target="Y" value="1" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Width" value="433" ver="2"/>
			<designed target="Height" value="397" ver="2"/>
			<designed target="RowsHeight" value="30" ver="2"/>
			<designed target="RowsMaxCount" value="10000" ver="2"/>
			<designed target="RowsOrder" value="0" ver="2"/>
			<designed target="Frozen" value="false" ver="2"/>
			<designed target="SelectionBehavior" value="1" ver="2"/>
			<designed target="SelectionMode" value="1" ver="2"/>
			<designed target="LatestRowTracking" value="false" ver="2"/>
			<object access-modifier="private" name="Priority" display-name="Priority" uuid="2e0eb5ce-c1b7-4e35-b3eb-0fe924af4a9c" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="" ver="2"/>
				<designed target="Index" value="0" ver="2"/>
				<designed target="BackgroundColor" value="4293980400" ver="2"/>
				<designed target="ForegroundColor" value="4278190080" ver="2"/>
				<designed target="Font" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="TitleBackgroundColor" value="4293980400" ver="2"/>
				<designed target="TitleForegroundColor" value="4278190080" ver="2"/>
				<designed target="TitleFont" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="Width" value="100" ver="2"/>
				<designed target="WidthResizeMode" value="2" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="Hidden" value="false" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="TypeCode" value="4" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="false" ver="3"/>
			</object>
			<object access-modifier="private" name="Field" display-name="Field" uuid="9afbb87a-fd29-43ee-a30f-0753eac4ae36" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Поле" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="" ver="2"/>
				<designed target="Index" value="0" ver="2"/>
				<designed target="BackgroundColor" value="4293980400" ver="2"/>
				<designed target="ForegroundColor" value="4278190080" ver="2"/>
				<designed target="Font" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="TitleBackgroundColor" value="4293980400" ver="2"/>
				<designed target="TitleForegroundColor" value="4278190080" ver="2"/>
				<designed target="TitleFont" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="Width" value="160" ver="2"/>
				<designed target="WidthResizeMode" value="2" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="Hidden" value="false" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="TypeCode" value="4" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
				<designed target="WordWrap" value="false" ver="3"/>
			</object>
			<object access-modifier="private" name="Direction" display-name="Direction" uuid="7d45adfe-61c9-47f2-9158-c9091fdc9fb5" base-type="TableColumn" base-type-id="109c05c5-8dcf-4a8f-aedd-5bb547cca2d4" ver="2">
				<designed target="Title" value="Порядок" ver="2"/>
				<designed target="Description" value="" ver="2"/>
				<designed target="Id" value="" ver="2"/>
				<designed target="Index" value="0" ver="2"/>
				<designed target="BackgroundColor" value="4293980400" ver="2"/>
				<designed target="ForegroundColor" value="4278190080" ver="2"/>
				<designed target="Font" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="TextAlignment" value="129" ver="2"/>
				<designed target="TitleBackgroundColor" value="4293980400" ver="2"/>
				<designed target="TitleForegroundColor" value="4278190080" ver="2"/>
				<designed target="TitleFont" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="Width" value="170" ver="2"/>
				<designed target="WidthResizeMode" value="2" ver="2"/>
				<designed target="Emptiable" value="true" ver="2"/>
				<designed target="Hidden" value="false" ver="2"/>
				<designed target="NumberFormat" value="%d" ver="2"/>
				<designed target="TimeFormat" value="dd.MM.yyyy hh:mm:ss.zzz" ver="2"/>
				<designed target="TypeCode" value="4" ver="2"/>
				<designed target="JsonFilter" value="" ver="2"/>
				<designed target="SortingEnabled" value="false" ver="2"/>
				<designed target="SortOrder" value="0" ver="2"/>
				<designed target="SortPriority" value="0" ver="2"/>
			</object>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="SelectionChanged">
				<body kind="javascript">
					<![CDATA[Table_1.FieldEdit.Visible = false;
Table_1.DirectionEdit.Visible = false;
Button_Up.Enabled = false;
Button_Down.Enabled = false;
Button_Delete.Enabled = false;
Table_1.FieldEdit.Clear();
Table_1.DirectionEdit.Clear();

//Ищем выбранное поле в таблице
for (let i=0; i < Table_1.GetRowsCount(); i++)
{	
	if (Table_1.IsRowSelected(i))
	{
		Table_1.FieldEdit.Visible = true;
		Table_1.DirectionEdit.Visible = true;
		rowNumber = i;
		Button_Up.Enabled = true;
		Button_Down.Enabled = true;
		Button_Delete.Enabled = true;
		//Задаем координаты для вызова элементов редактирования строки
		Table_1.FieldEdit.X = Table_1.X + 100;
		Table_1.FieldEdit.Y = Table_1.Y + 21 + 31*i;
		Table_1.DirectionEdit.X =Table_1.X + 260;
		Table_1.DirectionEdit.Y =Table_1.Y + 21 + 31*i;
		Table_1.FieldEdit.AddItem("");
		Table_1.FieldEdit.SetItem(0,Table_1.GetCellData(i,1));
		Table_1.DirectionEdit.AddItem("");
		
		if (Table_1.GetCellData(i,2) != "По возрастанию (от А до Я)")
		{
			Table_1.DirectionEdit.SetItem(0,"По убыванию (от Я до А)");
			Table_1.DirectionEdit.AddItem("По возрастанию (от А до Я)");
		}
		else
		{
			Table_1.DirectionEdit.SetItem(0,"По возрастанию (от А до Я)");
			Table_1.DirectionEdit.AddItem("По убыванию (от Я до А)");
		}
		/*if (Table_1.GetCellData(i,2) != "По возрастанию (от А до Я)")
		{
			Table_1.DirectionEdit.SetItem(0,Table_1.GetCellData(i,2));
			Table_1.DirectionEdit.AddItem("По возрастанию (от А до Я)");
		}
		else
		{
			Table_1.DirectionEdit.SetItem(0,Table_1.GetCellData(i,2));
			Table_1.DirectionEdit.AddItem("По убыванию (от Я до А)");
		}*/
	}		
}

//Заполнение выпадающего списка имени столбца
for (let i = 0; i < TempTable_1.GetRowsCount();i++)
{
	if (TempTable_1.GetCellData(i,0) == false) 
	{
		Table_1.FieldEdit.AddItem(TempTable_1.GetCellData(i,1));
	}
}
]]>
				</body>
			</do-on>
			<object access-modifier="private" name="FieldEdit" display-name="FieldEdit" uuid="649d00f5-93d5-4ae0-983d-6af98ba41791" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="2">
				<designed target="X" value="373" ver="2"/>
				<designed target="Y" value="266" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="true" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="165" ver="2"/>
				<designed target="Height" value="28" ver="2"/>
				<designed target="Editable" value="false" ver="2"/>
				<designed target="Text" value="" ver="2"/>
				<designed target="SelectedIndex" value="-1" ver="2"/>
				<designed target="Font" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="FontColor" value="4278190080" ver="2"/>
				<designed target="MaxVisibleItems" value="10" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="SelectedChanged">
					<body kind="javascript">
						<![CDATA[var matchCount = 0;
//Запись выбранного значения из списка в таблицу и обновление статуса в глобальной таблице
if (Table_1.FieldEdit.SelectedIndex > 0) 
{
	Table_1.SetCellData(rowNumber,1,Table_1.FieldEdit.GetItem(SelectedIndex));
	for (let i = 0; i < TempTable_1.GetRowsCount(); i++)
	{
		if (TempTable_1.GetCellData(i,1) == Table_1.FieldEdit.GetItem(SelectedIndex)) TempTable_1.SetCellData(i,0,true);
	}
}

//статус использования всех полей, незадействованные в таблице, обнуляется
for (let i = 0; i < TempTable_1.GetRowsCount();i++)
{
	for (let j = 0; j < Table_1.GetRowsCount(); j++)
	{
		if (TempTable_1.GetCellData(i,1) == Table_1.GetCellData(j,1)) matchCount++;
	}
	if (matchCount == 0) TempTable_1.SetCellData(i,0,false);
	matchCount = 0;
}

]]>
					</body>
				</do-on>
			</object>
			<object access-modifier="private" name="DirectionEdit" display-name="DirectionEdit" uuid="e6a01387-1293-4f12-ab6f-89c77fda3ece" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="2">
				<designed target="X" value="373" ver="2"/>
				<designed target="Y" value="293" ver="2"/>
				<designed target="Rotation" value="0" ver="2"/>
				<designed target="Scale" value="1" ver="2"/>
				<designed target="Visible" value="true" ver="2"/>
				<designed target="Enabled" value="true" ver="2"/>
				<designed target="Tooltip" value="" ver="2"/>
				<designed target="Width" value="170" ver="2"/>
				<designed target="Height" value="28" ver="2"/>
				<designed target="Editable" value="false" ver="2"/>
				<designed target="Text" value="" ver="2"/>
				<designed target="SelectedIndex" value="-1" ver="2"/>
				<designed target="Font" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
				<designed target="FontColor" value="4278190080" ver="2"/>
				<designed target="MaxVisibleItems" value="10" ver="2"/>
				<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="SelectedChanged">
					<body kind="javascript">
						<![CDATA[var matchCount = 0;
//Запись выбранного значения из списка в таблицу и обновление статуса в глобальной таблице
if (Table_1.DirectionEdit.SelectedIndex > 0) 
{
	Table_1.SetCellData(rowNumber,2,Table_1.DirectionEdit.GetItem(SelectedIndex));
	for (let i = 0; i < TempTable_1.GetRowsCount(); i++)
	{
		if (TempTable_1.GetCellData(i,1) == Table_1.DirectionEdit.GetItem(SelectedIndex)) TempTable_1.SetCellData(i,2,Table_1.DirectionEdit.GetItem(SelectedIndex));
	}
	
}

//статус использования всех полей, незадействованные в таблице, обнуляется
for (let i = 0; i < TempTable_1.GetRowsCount();i++)
{
	for (let j = 0; j < Table_1.GetRowsCount(); j++)
	{
		if (TempTable_1.GetCellData(i,1) == Table_1.GetCellData(j,1)) matchCount++;
	}
	if (matchCount == 0) TempTable_1.SetCellData(i,0,false);
	matchCount = 0;
}

]]>
					</body>
				</do-on>
			</object>
		</object>
		<object access-modifier="private" name="Button_Add" display-name="Button_Add" uuid="c3bea5e0-3785-4e67-ace1-bde393529790" base-type="SystemButton" base-type-id="22504b6b-d24c-45e5-a9dd-6fb41e3d49c1" ver="2">
			<designed target="X" value="453" ver="2"/>
			<designed target="Y" value="15" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="75" ver="2"/>
			<designed target="Height" value="23" ver="2"/>
			<designed target="Checkable" value="false" ver="2"/>
			<designed target="Text" value="Добавить" ver="2"/>
			<designed target="Font" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="3" event="ButtonPressed">
				<body kind="javascript">
					<![CDATA[Table_1.SetSelectedRows("[]"); //Обнуляем выделение
var matchCount = 0;
//Заполняем временную таблицу возможными значениями

//статус использования всех полей, незадействованные в таблице, обнуляется
for (let i = 0; i < TempTable_1.GetRowsCount();i++)
{
	for (let j = 0; j < Table_1.GetRowsCount(); j++)
	{
		if (TempTable_1.GetCellData(i,1) == Table_1.GetCellData(j,1)) matchCount++;
	}
	if (matchCount == 0) TempTable_1.SetCellData(i,0,false);
	matchCount = 0;
}

//Если поле временной таблицы имеет статус Use "false", то добавяем в таблицу сортировки. Первый элемент таблицы идет с описанием "Сортировать по" для определения приоритета сортировки
for (let i = 0; i < TempTable_1.GetRowsCount(); i++)
{
	if (TempTable_1.GetCellData(i,0) == false)
	{
		Table_1.AddRow();
		if (Table_1.GetRowsCount()>1) Table_1.SetCellData(Table_1.GetRowsCount()-1,0,"Затем по");
		else Table_1.SetCellData(Table_1.GetRowsCount()-1,0,"Сортировать по");
		Table_1.SetCellData(Table_1.GetRowsCount()-1,1,TempTable_1.GetCellData(i,1));
		Table_1.SetCellData(Table_1.GetRowsCount()-1,2,TempTable_1.GetCellData(i,2));
		TempTable_1.SetCellData(i,0,true);
		break;
	}
}

if (Table_1.GetRowsCount() == 12) tableFull = true; //Если таблица заполнена, то блокируем кнопку "Добавить"
else tableFull = false;
]]>
				</body>
			</do-on>
			<do-trace access-modifier="private" target="Enabled" ver="3">
				<body>
					<![CDATA[!tableFull]]>
				</body>
			</do-trace>
		</object>
		<object access-modifier="private" name="Button_Delete" display-name="Button_Delete" uuid="c76952c7-60c0-4d42-9a7b-976e5b385dd3" base-type="SystemButton" base-type-id="22504b6b-d24c-45e5-a9dd-6fb41e3d49c1" ver="2">
			<designed target="X" value="453" ver="2"/>
			<designed target="Y" value="39" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="false" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="75" ver="2"/>
			<designed target="Height" value="23" ver="2"/>
			<designed target="Checkable" value="false" ver="2"/>
			<designed target="Text" value="Удалить" ver="2"/>
			<designed target="Font" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="ButtonPressed">
				<body kind="javascript">
					<![CDATA[var field;
//Удаление выбранной строки из таблицы сортировки
for (let i = 0; i < Table_1.GetRowsCount(); i++)
{
	if (Table_1.IsRowSelected(i))
	{
		field = Table_1.GetCellData(i,1);
		Table_1.RemoveRow(i);
	}
}
//Ищем удаленной поле в временной таблице и помечаем как неиспользуемое
for (let i = 0; i < TempTable_1.GetRowsCount(); i++)
{
	if (TempTable_1.GetCellData(i,1) == field) TempTable_1.SetCellData(i,0,false);
}
if (Table_1.GetRowsCount() > 0) Table_1.SetCellData(0,0,"Сортировать по");

tableFull = false;]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="Button_Apply" display-name="Button_Apply" uuid="3d4a842b-2e90-4a18-8a3b-6f24424cd452" base-type="SystemButton" base-type-id="22504b6b-d24c-45e5-a9dd-6fb41e3d49c1" ver="2">
			<designed target="X" value="453" ver="2"/>
			<designed target="Y" value="125" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="true" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="75" ver="2"/>
			<designed target="Height" value="23" ver="2"/>
			<designed target="Checkable" value="false" ver="2"/>
			<designed target="Text" value="Применить" ver="2"/>
			<designed target="Font" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="ButtonPressed">
				<body kind="javascript">
					<![CDATA[var Column=[];
var table;

//Если таблица в оперативном режиме, то берем ее параметры, если нет - берем параметры исторической таблицы
if (Alarms_1.ActiveMode == 0)
{
	Column[0] = Alarms_1.Main_tables.Table_Operative_mode.Colum_1;
	Column[1] = Alarms_1.Main_tables.Table_Operative_mode.Colum_2;
	Column[2] = Alarms_1.Main_tables.Table_Operative_mode.Colum_3;
	Column[3] = Alarms_1.Main_tables.Table_Operative_mode.Colum_4;
	Column[4] = Alarms_1.Main_tables.Table_Operative_mode.Colum_5;
	Column[5] = Alarms_1.Main_tables.Table_Operative_mode.Colum_6;
	Column[6] = Alarms_1.Main_tables.Table_Operative_mode.Colum_7;
	Column[7] = Alarms_1.Main_tables.Table_Operative_mode.Colum_8;
	Column[8] = Alarms_1.Main_tables.Table_Operative_mode.Colum_9;
	Column[9] = Alarms_1.Main_tables.Table_Operative_mode.Colum_10;
	Column[10] = Alarms_1.Main_tables.Table_Operative_mode.Colum_19;
	Column[11] = Alarms_1.Main_tables.Table_Operative_mode.Colum_20;
	table = Alarms_1.Main_tables.Table_Operative_mode;
}
else
{
	Column[0] = Alarms_1.Main_tables_1.Table_History_mode.Colum_1;
	Column[1] = Alarms_1.Main_tables_1.Table_History_mode.Colum_2;
	Column[2] = Alarms_1.Main_tables_1.Table_History_mode.Colum_3;
	Column[3] = Alarms_1.Main_tables_1.Table_History_mode.Colum_4;
	Column[4] = Alarms_1.Main_tables_1.Table_History_mode.Colum_5;
	Column[5] = Alarms_1.Main_tables_1.Table_History_mode.Colum_6;
	Column[6] = Alarms_1.Main_tables_1.Table_History_mode.Colum_7;
	Column[7] = Alarms_1.Main_tables_1.Table_History_mode.Colum_8;
	Column[8] = Alarms_1.Main_tables_1.Table_History_mode.Colum_9;
	Column[9] = Alarms_1.Main_tables_1.Table_History_mode.Colum_10;
	Column[10] = Alarms_1.Main_tables_1.Table_History_mode.Colum_19;
	table = Alarms_1.Main_tables_1.Table_History_mode;
}

//Сбрасываем текущую сортировку
for (let i = 0; i < Column.length; i++)
{
	Column[i].SortingEnabled = false;
}
table.ApplySort();

//Применяем сортировку к активной таблице
for (let i = 0; i < Table_1.GetRowsCount(); i++)
{
	for (let j = 0; j < Column.length; j++)
	{
		if (Column[j].Title == Table_1.GetCellData(i,1))
		{
			Column[j].SortingEnabled = true;
			if (Table_1.GetCellData(i,2) == "По возрастанию (от А до Я)") Column[j].SortOrder = 0;
			else Column[j].SortOrder = 1;
			Column[j].SortPriority = Table_1.GetRowsCount() - i;
		}
	}
}
table.ApplySort();
Alarms_1.Main_panel.private.SaveSortingConfig();
Close();
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="Button_Up" display-name="Button_Up" uuid="2f638e88-0f7d-4f4d-b83a-4ea09aef1689" base-type="SystemButton" base-type-id="22504b6b-d24c-45e5-a9dd-6fb41e3d49c1" ver="2">
			<designed target="X" value="453" ver="2"/>
			<designed target="Y" value="70" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="false" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="75" ver="2"/>
			<designed target="Height" value="23" ver="2"/>
			<designed target="Checkable" value="false" ver="2"/>
			<designed target="Text" value="Вверх" ver="2"/>
			<designed target="Font" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="ButtonPressed">
				<body kind="javascript">
					<![CDATA[//Двигаем строку вверх
var tempRow = [], currentRow = [];
if (rowNumber == 0) return;

//Запоминаем верхнюю строку. Если выделенная строка - 2я, то делаем так, чтобы первый столбец новой строки был "Сортировать по"
if (rowNumber == 1)
{
	tempRow = [Table_1.GetCellData(rowNumber,0),Table_1.GetCellData(rowNumber-1,1),Table_1.GetCellData(rowNumber-1,2)];
	currentRow = [Table_1.GetCellData(rowNumber-1,0),Table_1.GetCellData(rowNumber,1),Table_1.GetCellData(rowNumber,2)];
}
else 
{
	tempRow = [Table_1.GetCellData(rowNumber-1,0),Table_1.GetCellData(rowNumber-1,1),Table_1.GetCellData(rowNumber-1,2)];
	currentRow = [Table_1.GetCellData(rowNumber,0),Table_1.GetCellData(rowNumber,1),Table_1.GetCellData(rowNumber,2)];
}

//Перемещаем строку вверх
Table_1.SetCellData(rowNumber-1,0,currentRow[0]);
Table_1.SetCellData(rowNumber-1,1,currentRow[1]);
Table_1.SetCellData(rowNumber-1,2,currentRow[2]);

Table_1.SetCellData(rowNumber,0,tempRow[0]);
Table_1.SetCellData(rowNumber,1,tempRow[1]);
Table_1.SetCellData(rowNumber,2,tempRow[2]);

//Выделяем перенесенную строку
var number = [rowNumber-1];
Table_1.SetSelectedRows(JSON.stringify(number));
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="Button_Down" display-name="Button_Down" uuid="66b043c9-5935-41a0-9177-470351ea45ad" base-type="SystemButton" base-type-id="22504b6b-d24c-45e5-a9dd-6fb41e3d49c1" ver="2">
			<designed target="X" value="453" ver="2"/>
			<designed target="Y" value="94" ver="2"/>
			<designed target="Rotation" value="0" ver="2"/>
			<designed target="Scale" value="1" ver="2"/>
			<designed target="Visible" value="true" ver="2"/>
			<designed target="Enabled" value="false" ver="2"/>
			<designed target="Tooltip" value="" ver="2"/>
			<designed target="Width" value="75" ver="2"/>
			<designed target="Height" value="23" ver="2"/>
			<designed target="Checkable" value="false" ver="2"/>
			<designed target="Text" value="Вниз" ver="2"/>
			<designed target="Font" value="MS Shell Dlg 2,8.25,-1,5,50,0,0,0,0,0" ver="2"/>
			<designed target="FontColor" value="4278190080" ver="2"/>
			<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="ButtonPressed">
				<body kind="javascript">
					<![CDATA[//Двигаем строку вниз
var tempRow = [], currentRow = [];
if (rowNumber == Table_1.GetRowsCount()-1) return;

//Запоминаем нижнюю строку. Если выделенная строка - 1я, то делаем так, чтобы первый столбец новой строки был "Затем по"
if (rowNumber == 0)
{
	tempRow = [Table_1.GetCellData(rowNumber,0),Table_1.GetCellData(rowNumber+1,1),Table_1.GetCellData(rowNumber+1,2)];
	currentRow = [Table_1.GetCellData(rowNumber+1,0),Table_1.GetCellData(rowNumber,1),Table_1.GetCellData(rowNumber,2)];
}
else 
{
	tempRow = [Table_1.GetCellData(rowNumber+1,0),Table_1.GetCellData(rowNumber+1,1),Table_1.GetCellData(rowNumber+1,2)];
	currentRow = [Table_1.GetCellData(rowNumber,0),Table_1.GetCellData(rowNumber,1),Table_1.GetCellData(rowNumber,2)];
}

//Перемещаем строку вниз
Table_1.SetCellData(rowNumber+1,0,currentRow[0]);
Table_1.SetCellData(rowNumber+1,1,currentRow[1]);
Table_1.SetCellData(rowNumber+1,2,currentRow[2]);

Table_1.SetCellData(rowNumber,0,tempRow[0]);
Table_1.SetCellData(rowNumber,1,tempRow[1]);
Table_1.SetCellData(rowNumber,2,tempRow[2]);

//Выделяем перенесенную строку
var number = [rowNumber+1];
Table_1.SetSelectedRows(JSON.stringify(number));
]]>
				</body>
			</do-on>
		</object>
		<object access-modifier="private" name="TempTable_1" display-name="TempTable_1" uuid="ee5c6fcd-fd41-42b0-a1dc-62894ced3548" base-type="InMemoryTable" base-type-id="32b2875b-ee3e-454d-bcbb-40806a49273c" ver="3">
			<designed target="MaxRowCount" value="0" ver="3"/>
		</object>
	</object>
	<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="2" event="Opened">
		<body kind="javascript">
			<![CDATA[Rectangle_1.Table_1.FieldEdit.Visible = false;
Rectangle_1.Table_1.DirectionEdit.Visible = false;

TableFilling(); //Считываем параметры сортировки и заполняем таблицы формы

Focus = true; //Переводим Focus на форму для обработки нажатия клавиш



]]>
		</body>
	</do-on>
	<object access-modifier="private" name="rowNumber" display-name="rowNumber" uuid="8bbc87c2-203b-4d15-9443-024f2b26f3ba" base-type="int1" base-type-id="756a0a23-7e63-4a13-8a35-e8a38909e5ed" ver="2"/>
	<object access-modifier="private" name="Alarms_1" display-name="Alarms_1" uuid="0e74bc7d-34c2-453c-9342-1730c4df2a2e" base-type="Alarms" base-type-id="e8a9dba0-e07f-4bfe-95f9-b75887e3f21b" base-const="true" base-ref="true" ver="2"/>
	<do access-modifier="private" name="TableFilling" display-name="TableFilling" ver="2" type="" type-id="">
		<body kind="javascript">
			<![CDATA[//Функция заполнения таблицы сортировки
var matchCount = 0;
var Column=[];
tableFull = false; //Проверка заполненности таблицы

//Если таблица в оперативном режиме, то берем ее параметры, если нет - берем параметры исторической таблицы
if (Alarms_1.ActiveMode == 0)
{
	Column[0] = Alarms_1.Main_tables.Table_Operative_mode.Colum_1;
	Column[1] = Alarms_1.Main_tables.Table_Operative_mode.Colum_2;
	Column[2] = Alarms_1.Main_tables.Table_Operative_mode.Colum_3;
	Column[3] = Alarms_1.Main_tables.Table_Operative_mode.Colum_4;
	Column[4] = Alarms_1.Main_tables.Table_Operative_mode.Colum_5;
	Column[5] = Alarms_1.Main_tables.Table_Operative_mode.Colum_6;
	Column[6] = Alarms_1.Main_tables.Table_Operative_mode.Colum_7;
	Column[7] = Alarms_1.Main_tables.Table_Operative_mode.Colum_8;
	Column[8] = Alarms_1.Main_tables.Table_Operative_mode.Colum_9;
	Column[9] = Alarms_1.Main_tables.Table_Operative_mode.Colum_10;
	Column[10] = Alarms_1.Main_tables.Table_Operative_mode.Colum_19;
	Column[11] = Alarms_1.Main_tables.Table_Operative_mode.Colum_20;
}
else
{
	Column[0] = Alarms_1.Main_tables_1.Table_History_mode.Colum_1;
	Column[1] = Alarms_1.Main_tables_1.Table_History_mode.Colum_2;
	Column[2] = Alarms_1.Main_tables_1.Table_History_mode.Colum_3;
	Column[3] = Alarms_1.Main_tables_1.Table_History_mode.Colum_4;
	Column[4] = Alarms_1.Main_tables_1.Table_History_mode.Colum_5;
	Column[5] = Alarms_1.Main_tables_1.Table_History_mode.Colum_6;
	Column[6] = Alarms_1.Main_tables_1.Table_History_mode.Colum_7;
	Column[7] = Alarms_1.Main_tables_1.Table_History_mode.Colum_8;
	Column[8] = Alarms_1.Main_tables_1.Table_History_mode.Colum_9;
	Column[9] = Alarms_1.Main_tables_1.Table_History_mode.Colum_10;
	Column[10] = Alarms_1.Main_tables_1.Table_History_mode.Colum_19;
	Column[11] = Alarms_1.Main_tables_1.Table_History_mode.Colum_20;
}

Rectangle_1.TempTable_1.MaxRowCount = 20;
Rectangle_1.TempTable_1.AddColumn(0, "Use", "", "", "", "bool", false, true, false);
Rectangle_1.TempTable_1.AddColumn(1, "Field", "", "", "", "string", false, true, false);
Rectangle_1.TempTable_1.AddColumn(2, "Direction", "", "", "", "string", false, true, false);

for (let i = 0; i < Column.length; i++)
{
	//Заполняем промежуточную таблицу
	Rectangle_1.TempTable_1.AddRow();
	Rectangle_1.TempTable_1.SetCellData(i,0,Column[i].SortingEnabled);
	Rectangle_1.TempTable_1.SetCellData(i,1,Column[i].Title);
	if (Column[i].SortOrder == 0 || !Column[i].SortingEnabled) Rectangle_1.TempTable_1.SetCellData(i,2,"По возрастанию (от А до Я)");
	else Rectangle_1.TempTable_1.SetCellData(i,2,"По убыванию (от Я до А)");

	//Выводим параметры сортировки в видимую таблицу, если они есть
	if (Column[i].SortingEnabled)
	{
		Rectangle_1.Table_1.AddRow();
		Rectangle_1.Table_1.SetCellData(Rectangle_1.Table_1.GetRowsCount()-1, 0, Column[i].SortPriority);
		Rectangle_1.Table_1.SetCellData(Rectangle_1.Table_1.GetRowsCount()-1, 1, Column[i].Title);
		if (Column[i].SortOrder == 0) Rectangle_1.Table_1.SetCellData(Rectangle_1.Table_1.GetRowsCount()-1, 2,"По возрастанию (от А до Я)");
		else Rectangle_1.Table_1.SetCellData(Rectangle_1.Table_1.GetRowsCount()-1, 2,"По убыванию (от Я до А)");
	}
}
if (Rectangle_1.TempTable_1.GetRowsCount() == Column.length - 1) tableFull = true;
//В случае, если таблица пуста, значит используется сортировка по времени генерации(по умолчанию)
if (Rectangle_1.Table_1.GetRowsCount() == 0)
{
	Rectangle_1.Table_1.AddRow();
	Rectangle_1.Table_1.SetCellData(Rectangle_1.Table_1.GetRowsCount()-1, 0, "Сортировать по");
	Rectangle_1.Table_1.SetCellData(Rectangle_1.Table_1.GetRowsCount()-1, 1, Column[0].Title);
	if (Column[0].SortOrder == 0) Rectangle_1.Table_1.SetCellData(Rectangle_1.Table_1.GetRowsCount()-1, 2,"По возрастанию (от А до Я)");
	else Rectangle_1.Table_1.SetCellData(Rectangle_1.Table_1.GetRowsCount()-1, 2,"По убыванию (от Я до А)");
	Rectangle_1.TempTable_1.SetCellData(0,0,true);
}
else //Если элементов больше одного, то применяем сортировку по приоритету
{
	for (let i = 0; i < Rectangle_1.Table_1.GetRowsCount(); i++)
	{
		for (let j = 0; j < Rectangle_1.Table_1.GetRowsCount(); j++)
		{
			if (Rectangle_1.Table_1.GetCellData(i,0) > Rectangle_1.Table_1.GetCellData(j,0))
			{
				let tempCol0 = Rectangle_1.Table_1.GetCellData(j,0);
				let tempCol1 = Rectangle_1.Table_1.GetCellData(j,1);
				let tempCol2 = Rectangle_1.Table_1.GetCellData(j,2);
				Rectangle_1.Table_1.SetCellData(j,0,Rectangle_1.Table_1.GetCellData(i,0));
				Rectangle_1.Table_1.SetCellData(j,1,Rectangle_1.Table_1.GetCellData(i,1));
				Rectangle_1.Table_1.SetCellData(j,2,Rectangle_1.Table_1.GetCellData(i,2));
				Rectangle_1.Table_1.SetCellData(i,0,tempCol0);
				Rectangle_1.Table_1.SetCellData(i,1,tempCol1);
				Rectangle_1.Table_1.SetCellData(i,2,tempCol2);
			}
		}
	}
	//Меняем все значения сортировки на текст "Сортировать по" и "Затем по"
	for (let i = 0; i < Rectangle_1.Table_1.GetRowsCount(); i++)
	{
		if (i == 0) Rectangle_1.Table_1.SetCellData(i,0,"Сортировать по");
		else Rectangle_1.Table_1.SetCellData(i,0,"Затем по");
	}
}

]]>
		</body>
	</do>
	<object access-modifier="private" name="tableFull" display-name="tableFull" uuid="4610154b-671a-49db-a54c-bbc47686132d" base-type="notifying_bool" base-type-id="f8797810-1baa-4a1f-af36-cf839bf252e8" ver="3"/>
	<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="3" event="KeyPress">
		<body kind="om">
			<![CDATA[vi: uint4 = event.KeyCode;
if (vi==75) Close();
]]>
		</body>
	</do-on>
</type>

