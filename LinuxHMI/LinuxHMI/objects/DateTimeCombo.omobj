<type access-modifier="private" name="DateTimeCombo" display-name="DateTimeCombo" uuid="6e2eea30-385f-4294-b922-8fd35b6fbf6e" base-type="Dummy" base-type-id="e4b644cf-f3a8-4d11-82a0-6acc23748e14" ver="1">
	<designed target="X" value="0" ver="1"/>
	<designed target="Y" value="0" ver="1"/>
	<designed target="Rotation" value="0" ver="1"/>
	<designed target="Scale" value="1" ver="1"/>
	<designed target="Visible" value="true" ver="1"/>
	<designed target="Enabled" value="true" ver="1"/>
	<designed target="Tooltip" value="" ver="1"/>
	<object access-modifier="private" name="ErrorDate_Rectangle" display-name="ErrorDate_Rectangle" uuid="fc2e6cd6-aebc-4426-ba78-6bf8eaf96322" base-type="Rectangle" base-type-id="15726dc3-881e-4d8d-b0fa-a8f8237f08ca" ver="1">
		<designed target="X" value="-1" ver="1"/>
		<designed target="Y" value="-1" ver="1"/>
		<designed target="Rotation" value="0" ver="1"/>
		<designed target="Scale" value="1" ver="1"/>
		<designed target="Visible" value="true" ver="1"/>
		<designed target="Enabled" value="true" ver="1"/>
		<designed target="Tooltip" value="" ver="1"/>
		<designed target="Width" value="297" ver="1"/>
		<designed target="Height" value="29" ver="1"/>
		<designed target="RoundingRadius" value="0" ver="1"/>
		<designed target="PenColor" value="0xffff0000" ver="1"/>
		<designed target="PenStyle" value="1" ver="1"/>
		<designed target="PenWidth" value="2" ver="1"/>
		<designed target="BrushColor" value="4278190080" ver="1"/>
		<designed target="BrushStyle" value="0" ver="1"/>
		<init target="Visible" ver="1" value="false"/>
	</object>
	<object access-modifier="private" name="Day_ComboBox" display-name="Day_ComboBox" uuid="546b02b6-b1ec-4ff3-8207-787b71934d63" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="1">
		<designed target="X" value="0" ver="1"/>
		<designed target="Y" value="0" ver="1"/>
		<designed target="Rotation" value="0" ver="1"/>
		<designed target="Scale" value="1" ver="1"/>
		<designed target="Visible" value="true" ver="1"/>
		<designed target="Enabled" value="true" ver="1"/>
		<designed target="Tooltip" value="" ver="1"/>
		<designed target="Width" value="45" ver="1"/>
		<designed target="Height" value="27" ver="1"/>
		<designed target="Editable" value="false" ver="1"/>
		<designed target="Text" value="" ver="1"/>
		<designed target="SelectedIndex" value="-1" ver="1"/>
		<designed target="Font" value="Sans Serif,12,-1,5,50,0,0,0,0,0" ver="1"/>
		<designed target="FontColor" value="4278190080" ver="1"/>
		<designed target="MaxVisibleItems" value="12" ver="1"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="1" event="SelectedChanged">
			<body kind="om">
				<![CDATA[checkDateAction.Invoke();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="Month_ComboBox" display-name="Month_ComboBox" uuid="8573dd0c-4b10-4487-a5f2-25107b87aa38" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="1">
		<designed target="X" value="45" ver="1"/>
		<designed target="Y" value="0" ver="1"/>
		<designed target="Rotation" value="0" ver="1"/>
		<designed target="Scale" value="1" ver="1"/>
		<designed target="Visible" value="true" ver="1"/>
		<designed target="Enabled" value="true" ver="1"/>
		<designed target="Tooltip" value="" ver="1"/>
		<designed target="Width" value="45" ver="1"/>
		<designed target="Height" value="27" ver="1"/>
		<designed target="Editable" value="false" ver="1"/>
		<designed target="Text" value="" ver="1"/>
		<designed target="SelectedIndex" value="-1" ver="1"/>
		<designed target="Font" value="Sans Serif,12,-1,5,50,0,0,0,0,0" ver="1"/>
		<designed target="FontColor" value="4278190080" ver="1"/>
		<designed target="MaxVisibleItems" value="12" ver="1"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="1" event="SelectedChanged">
			<body kind="om">
				<![CDATA[checkDateAction.Invoke();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="Year_ComboBox" display-name="Year_ComboBox" uuid="ca4ce3a7-56ba-48a1-b9d7-461cd7843e14" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="1">
		<designed target="X" value="90" ver="1"/>
		<designed target="Y" value="0" ver="1"/>
		<designed target="Rotation" value="0" ver="1"/>
		<designed target="Scale" value="1" ver="1"/>
		<designed target="Visible" value="true" ver="1"/>
		<designed target="Enabled" value="true" ver="1"/>
		<designed target="Tooltip" value="" ver="1"/>
		<designed target="Width" value="65" ver="1"/>
		<designed target="Height" value="27" ver="1"/>
		<designed target="Editable" value="false" ver="1"/>
		<designed target="Text" value="" ver="1"/>
		<designed target="SelectedIndex" value="-1" ver="1"/>
		<designed target="Font" value="Sans Serif,12,-1,5,50,0,0,0,0,0" ver="1"/>
		<designed target="FontColor" value="4278190080" ver="1"/>
		<designed target="MaxVisibleItems" value="10" ver="1"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="1" event="SelectedChanged">
			<body kind="om">
				<![CDATA[checkDateAction.Invoke();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="Initializer" display-name="Initializer" uuid="fee9e2e2-0c35-4337-bb25-9cd57dc58b63" base-type="Initializer" base-type-id="6db89679-9299-4993-ad1a-0d086cd1c7d2" ver="1">
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="1" event="Initialized">
			<body kind="javascript">
				<![CDATA[var i=1;
//Очистка списка 
Day_ComboBox.Clear();
//Заполнение перечня дней 
for(var i=1;i<=31;++i)
{
	if (i<10)
	{
		Day_ComboBox.AddItem("0"+i);
	}
	else
	{
		Day_ComboBox.AddItem(i);
	}
}
//Заполнение перечня месяцев 
for(var i=1;i<=12;++i)
{
	if (i<10)
	{
		Month_ComboBox.AddItem("0"+i);
	}
	else
	{
		Month_ComboBox.AddItem(i);
	}
}
//Заполнение перечня лет 
for(var i=2018;i<=2030;++i)
{
	Year_ComboBox.AddItem(String(i));
}
//Заполнение перечня часов 
for(var i=0;i<=24;++i)
{
	if (i<10)
	{
		Hour_ComboBox.AddItem("0"+i);
	}
	else
	{
		Hour_ComboBox.AddItem(i);
	}
}
//Заполнение перечня минут и секунд 
for(var i=0;i<=60;++i)
{
	if (i<10)
	{
		Min_ComboBox.AddItem("0"+i);
		Sec_ComboBox.AddItem("0"+i);
	}
	else
	{
		Min_ComboBox.AddItem(i);
		Sec_ComboBox.AddItem(i);
	}
}]]>
			</body>
		</do-on>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="1" event="Initialized">
			<body kind="om">
				<![CDATA[resetDate.Invoke();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="Hour_ComboBox" display-name="Hour_ComboBox" uuid="ce1e121f-d38c-4af0-8ec9-63b763d78242" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="1">
		<designed target="X" value="160" ver="1"/>
		<designed target="Y" value="0" ver="1"/>
		<designed target="Rotation" value="0" ver="1"/>
		<designed target="Scale" value="1" ver="1"/>
		<designed target="Visible" value="true" ver="1"/>
		<designed target="Enabled" value="true" ver="1"/>
		<designed target="Tooltip" value="" ver="1"/>
		<designed target="Width" value="45" ver="1"/>
		<designed target="Height" value="27" ver="1"/>
		<designed target="Editable" value="false" ver="1"/>
		<designed target="Text" value="" ver="1"/>
		<designed target="SelectedIndex" value="-1" ver="1"/>
		<designed target="Font" value="Sans Serif,12,-1,5,50,0,0,0,0,0" ver="1"/>
		<designed target="FontColor" value="4278190080" ver="1"/>
		<designed target="MaxVisibleItems" value="10" ver="1"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="1" event="SelectedChanged">
			<body kind="om">
				<![CDATA[checkDateAction.Invoke();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="Min_ComboBox" display-name="Min_ComboBox" uuid="181bf4b8-8fe7-4bc9-bf29-2b7038dd19e5" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="1">
		<designed target="X" value="205" ver="1"/>
		<designed target="Y" value="0" ver="1"/>
		<designed target="Rotation" value="0" ver="1"/>
		<designed target="Scale" value="1" ver="1"/>
		<designed target="Visible" value="true" ver="1"/>
		<designed target="Enabled" value="true" ver="1"/>
		<designed target="Tooltip" value="" ver="1"/>
		<designed target="Width" value="45" ver="1"/>
		<designed target="Height" value="27" ver="1"/>
		<designed target="Editable" value="false" ver="1"/>
		<designed target="Text" value="" ver="1"/>
		<designed target="SelectedIndex" value="-1" ver="1"/>
		<designed target="Font" value="Sans Serif,12,-1,5,50,0,0,0,0,0" ver="1"/>
		<designed target="FontColor" value="4278190080" ver="1"/>
		<designed target="MaxVisibleItems" value="10" ver="1"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="1" event="SelectedChanged">
			<body kind="om">
				<![CDATA[checkDateAction.Invoke();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="Sec_ComboBox" display-name="Sec_ComboBox" uuid="333ac772-dd5b-40a2-a525-42e41e382e5e" base-type="ComboBox" base-type-id="3495bcd2-01f2-4709-b7f4-e9cf6f3a00bc" ver="1">
		<designed target="X" value="250" ver="1"/>
		<designed target="Y" value="0" ver="1"/>
		<designed target="Rotation" value="0" ver="1"/>
		<designed target="Scale" value="1" ver="1"/>
		<designed target="Visible" value="true" ver="1"/>
		<designed target="Enabled" value="true" ver="1"/>
		<designed target="Tooltip" value="" ver="1"/>
		<designed target="Width" value="45" ver="1"/>
		<designed target="Height" value="27" ver="1"/>
		<designed target="Editable" value="false" ver="1"/>
		<designed target="Text" value="" ver="1"/>
		<designed target="SelectedIndex" value="-1" ver="1"/>
		<designed target="Font" value="Sans Serif,12,-1,5,50,0,0,0,0,0" ver="1"/>
		<designed target="FontColor" value="4278190080" ver="1"/>
		<designed target="MaxVisibleItems" value="10" ver="1"/>
		<do-on access-modifier="private" name="Handler_2" display-name="Handler_2" ver="1" event="SelectedChanged">
			<body kind="om">
				<![CDATA[checkDateAction.Invoke();]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="resetDate" display-name="resetDate" uuid="b2c73b86-3b49-4adc-9eac-a8fa74cd15ee" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="1">
		<designed target="Enabled" value="true" ver="1"/>
		<designed target="InvokeTrigger" value="false" ver="1"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="1" event="Invoked">
			<body kind="om">
				<![CDATA[if (FromDate) //проверяем, этот тип для начального или конечного интервала
{
	ChangeMonth: bool = false; //описываем переменные для проверки перехода на следующий месяц и год
	ChangeYear: bool = false;
	if (DateTime.Day(DateTime.Now())==1)// проверка перехода на следующий месяц
	{
		ChangeMonth=true;
	}
	if (DateTime.Day(DateTime.Now())==1 && DateTime.Month(DateTime.Now())==1) // проверка на смену года
	{
		ChangeYear = true;
	}
	if (ChangeYear){
		Year_ComboBox.Text = Year_ComboBox.GetItem(DateTime.Year(DateTime.Now())-2); // если произошла смена года, выставляем 31 декабря предыдущего года
		Month_ComboBox.Text=Str.ToString(Month_ComboBox.ItemCount);
		Day_ComboBox.Text=Str.ToString(Day_ComboBox.ItemCount);
	}
	else
	{
		if(ChangeMonth)
		{
			Month_ComboBox.Text=Month_ComboBox.GetItem(DateTime.Month(DateTime.Now())-2); // если произошла смена месяца, выставляем последнее число предыдущего месяца (31)
			Day_ComboBox.Text=Str.ToString(Day_ComboBox.ItemCount);
		}
		else
		{
			if (DateTime.Day(DateTime.Now()) < 10) // если середина месяца, берем предыдущий день этого же месяца
			{
				Day_ComboBox.Text = "0"+Str.ToString(DateTime.Day(DateTime.Now())-1);
			}
			else
			{
				Day_ComboBox.Text = Str.ToString(DateTime.Day(DateTime.Now())-1);
			}
			//Установка месяца в данный момент
			if (DateTime.Month(DateTime.Now()) < 10)
			{
				Month_ComboBox.Text = "0"+Str.ToString(DateTime.Month(DateTime.Now()));
			}
			else
			{
				Month_ComboBox.Text = Str.ToString(DateTime.Month(DateTime.Now()));
			}
			//Установка года в данный момент
			if (DateTime.Year(DateTime.Now()) < 10)
			{
				Year_ComboBox.Text = "0"+Str.ToString(DateTime.Year(DateTime.Now()));
			}
			else
			{
				Year_ComboBox.Text = Str.ToString(DateTime.Year(DateTime.Now()));
			}
		}
		//Установка часов в данный момент
		if (DateTime.Hour(DateTime.Now()) < 10)
		{
			Hour_ComboBox.Text = "0"+Str.ToString(DateTime.Hour(DateTime.Now()));
		}
		else
		{
			Hour_ComboBox.Text = Str.ToString(DateTime.Hour(DateTime.Now()));
		}
		//Установка минут в данный момент
		if (DateTime.Minute(DateTime.Now()) < 10)
		{
			Min_ComboBox.Text = "0"+Str.ToString(DateTime.Minute(DateTime.Now()));
		}
		else
		{
			Min_ComboBox.Text = Str.ToString(DateTime.Minute(DateTime.Now()));
		}
		//Установка секунд в данный момент
		if (DateTime.Second(DateTime.Now()) < 10)
		{
			Sec_ComboBox.Text = "0"+Str.ToString(DateTime.Second(DateTime.Now()));
		}
		else
		{
			Sec_ComboBox.Text = Str.ToString(DateTime.Second(DateTime.Now()));
		}
	}
}
else
{
	//Установка дня в данный момент
	if (DateTime.Day(DateTime.Now()) < 10)
	{
		Day_ComboBox.Text = "0"+Str.ToString(DateTime.Day(DateTime.Now()));
	}
	else
	{
		Day_ComboBox.Text = Str.ToString(DateTime.Day(DateTime.Now()));
	}
	//Установка месяца в данный момент
	if (DateTime.Month(DateTime.Now()) < 10)
	{
		Month_ComboBox.Text = "0"+Str.ToString(DateTime.Month(DateTime.Now()));
	}
	else
	{
		Month_ComboBox.Text = Str.ToString(DateTime.Month(DateTime.Now()));
	}
	//Установка года в данный момент
	if (DateTime.Year(DateTime.Now()) < 10)
	{
		Year_ComboBox.Text = "0"+Str.ToString(DateTime.Year(DateTime.Now()));
	}
	else
	{
		Year_ComboBox.Text = Str.ToString(DateTime.Year(DateTime.Now()));
	}
	//Установка часов в данный момент
	if (DateTime.Hour(DateTime.Now()) < 10)
	{
		Hour_ComboBox.Text = "0"+Str.ToString(DateTime.Hour(DateTime.Now()));
	}
	else
	{
		Hour_ComboBox.Text = Str.ToString(DateTime.Hour(DateTime.Now()));
	}
	//Установка минут в данный момент
	if (DateTime.Minute(DateTime.Now()) < 10)
	{
		Min_ComboBox.Text = "0"+Str.ToString(DateTime.Minute(DateTime.Now()));
	}
	else
	{
		Min_ComboBox.Text = Str.ToString(DateTime.Minute(DateTime.Now()));
	}
	//Установка секунд в данный момент
	if (DateTime.Second(DateTime.Now()) < 10)
	{
		Sec_ComboBox.Text = "0"+Str.ToString(DateTime.Second(DateTime.Now()));
	}
	else
	{
		Sec_ComboBox.Text = Str.ToString(DateTime.Second(DateTime.Now()));
	}
}]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="checkDate" display-name="checkDate" uuid="b157f242-647c-4c1f-96f3-0e5969604f41" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="1"/>
	<object access-modifier="private" name="checkDateAction" display-name="checkDateAction" uuid="be42522b-0858-45fd-b380-8e5956e0e8e7" base-type="Action" base-type-id="a9ee9770-1c4a-44c9-b815-157d9fc2ab95" ver="1">
		<designed target="Enabled" value="true" ver="1"/>
		<designed target="InvokeTrigger" value="false" ver="1"/>
		<do-on access-modifier="private" name="Handler_1" display-name="Handler_1" ver="1" event="Invoked">
			<body kind="om">
				<![CDATA[//Полная строка даты
dateString = Day_ComboBox.Text + "." + Month_ComboBox.Text + "." + Year_ComboBox.Text + " " + Hour_ComboBox.Text + ":" + Min_ComboBox.Text + ":" + Sec_ComboBox.Text;
DateTimeStamp.Value=DateTime.Parse(dateString);
InputFormatterDate.InValue = dateString; //проверяем формат ввода даты
if (InputFormatterDate.FormatError == false)
{
	checkDate = true;
	ErrorDate_Rectangle.Visible=false;
}
else
{	
	checkDate = false;	
	ErrorDate_Rectangle.Visible=true;
}]]>
			</body>
		</do-on>
	</object>
	<object access-modifier="private" name="dateString" display-name="dateString" uuid="990070dd-9b07-47f4-a436-5eced2d72acc" base-type="notifying_string" base-type-id="14976fbf-36ab-415f-abc3-9f8fdc217351" ver="1"/>
	<object access-modifier="private" name="InputFormatterDate" display-name="InputFormatterDate" uuid="bfac20ed-baea-4d8e-931d-9e982aa7f54e" base-type="InputFormatter" base-type-id="01ee9a1b-486d-4fb5-895a-82a979766d19" ver="1">
		<designed target="InValue" value="" ver="1"/>
		<init target="Format" ver="1">
			<object access-modifier="private" uuid="a996c237-5a9b-4053-8443-ffb3070ddd12" base-type="FormatDateTime" base-type-id="353d14bd-bf52-4abb-8d4c-3b2541bb0de2" ver="1">
				<init target="DateTimeFormat" ver="1" value="d.M.yyyy H:m:s"/>
			</object>
		</init>
	</object>
	<param access-modifier="private" name="FromDate_or_ToDate" display-name="FromDate_or_ToDate" uuid="36b32a91-0408-4cc6-934c-d3fbdc0ec8ee" base-type="string" base-type-id="76403785-f3d5-41a7-9eb6-d19d2aa2d95d" ver="1"/>
	<object access-modifier="private" name="DateTimeStamp" display-name="DateTimeStamp" uuid="5e41330e-407f-4466-a1fd-5108f15fa741" base-type="notifying_timestamp" base-type-id="fb54ffc6-3bfa-4c71-8ae4-fc5d62558895" ver="1"/>
	<object access-modifier="private" name="FromDate" display-name="FromDate" uuid="cae4695e-9afc-4720-8e92-27be5e1f2a90" base-type="bool" base-type-id="7c9fe1ab-1ee2-42d8-939f-94ce3e89fca8" ver="1"/>
	<init target="FromDate" ver="1" value="true"/>
</type>

